[{"/home/csgarciamartinez/Telar/telar-client/src/index.js":"1","/home/csgarciamartinez/Telar/telar-client/src/App.js":"2","/home/csgarciamartinez/Telar/telar-client/src/reportWebVitals.js":"3","/home/csgarciamartinez/Telar/telar-client/src/Sala.js":"4","/home/csgarciamartinez/Telar/telar-client/src/Jugador.js":"5","/home/csgarciamartinez/Telar/telar-client/src/Tablero.js":"6","/home/csgarciamartinez/Telar/telar-client/src/ItemTypes.js":"7","/home/csgarciamartinez/Telar/telar-client/src/Ficha.js":"8","/home/csgarciamartinez/Telar/telar-client/src/Assets/imagenes.js":"9","/home/csgarciamartinez/Telar/telar-client/src/server/funcionesServidor.js":"10","/home/csgarciamartinez/Telar/telar-client/src/server/puntuacion.js":"11","/home/csgarciamartinez/Telar/telar-client/src/Tutorial.js":"12"},{"size":535,"mtime":1662513191009,"results":"13","hashOfConfig":"14"},{"size":5133,"mtime":1684714478915,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1661636981235,"results":"16","hashOfConfig":"14"},{"size":18781,"mtime":1684455798093,"results":"17","hashOfConfig":"14"},{"size":22628,"mtime":1684455798093,"results":"18","hashOfConfig":"14"},{"size":7356,"mtime":1684455798093,"results":"19","hashOfConfig":"14"},{"size":65,"mtime":1661636981235,"results":"20","hashOfConfig":"14"},{"size":532,"mtime":1684455798093,"results":"21","hashOfConfig":"14"},{"size":9786,"mtime":1684713466115,"results":"22","hashOfConfig":"14"},{"size":3544,"mtime":1684455798094,"results":"23","hashOfConfig":"14"},{"size":9913,"mtime":1684455798094,"results":"24","hashOfConfig":"14"},{"size":4664,"mtime":1684455798093,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"1c9bb4x",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/csgarciamartinez/Telar/telar-client/src/index.js",[],[],[],"/home/csgarciamartinez/Telar/telar-client/src/App.js",["69","70"],[],"import {useState, useRef } from 'react';\nimport imagenes_tutorial from './Assets/imagenes.js'\nimport pdf_nahua from './Assets/Nahua.pdf'\nimport pdf_tz from './Assets/Tzotzil.pdf'\nimport pdf_otomi from './Assets/Otomi.pdf'\nimport pdf_raramuri from './Assets/Raramuri.pdf'\nimport Tutorial from './Tutorial'\nimport React from 'react';\nimport Sala from './Sala'\n\n///// ARCHIVOS DE CSS //////\n//index.css especifica el layout para el sitio web en general\nimport './index.css';\n//el layout de la pagina de inicio en particular \nimport './inicio.css';\n\n\n//Las funciones necesarias para la puntuacion, para comenzar un juego, etc. \nconst fs = require('./server/funcionesServidor.js');\nconst VERBOSE = false; //poner en true para generar logs en la consola. \n\nfunction App() {\n  const [sala, setSala] = useState('');\n  const[turno, setTurno] = useState(-1) //Para multiplayer local\n  const[ronda, setRonda] = useState(-1) //Para multiplayer local\n  const[error, setError] = useState('')\n  var client = useRef();\n\n  //Para multiplayer local, esta funcion crea una nueva sala con el \n  //numero de jugadores y con las fichas que fueron elegidas\n  const toggleSala = () =>{\n    if(VERBOSE){\n      console.log('Creando sala de multiplayer local ... ')\n    }\n    var input = document.getElementById('jugadores');\n    var pueblo = document.getElementById('pueblo');\n    if(input.value && pueblo.value){\n      if(1<input.value && 5>input.value){\n        var nuevaSala = fs.nuevaSala(0, \"Local\", pueblo.value, true)\n        for(let i = 1; i < input.value; i++){\n          nuevaSala[\"usuarios\"].push(fs.nuevoJugador(i))\n        }\n        setSala(nuevaSala)\n      } else {\n        setError(\"El numero de jugadores debe ser entre 2 y 4\")\n      }\n    }\n  }\n\n  //El JSX/html para la sala de inicio \n  return (\n    <div>\n        <div class=\"header\">\n        <img src = {imagenes_tutorial.header[\"header\"]} alt= \"Telar\" onClick = {() => window.location.reload(true)}/></div>\n\n        {sala\n          ?\n            <div>\n              <Sala sala={sala} socket={client} setSala={setSala} setTurno={setTurno} setRonda = {setRonda}/> \n            </div>\n          : \n            <div class = \"menu\">\n              <li class = \"opcion\" id=\"multiplayer\">\n                <div class=\"opcionTexto\">\n                  <a class=\"btnInicio\" href=\"#multiplayer\"> Crear una sala de juego </a>\n                </div>\n                  <div class =\"submenu\">\n                    <form id=\"multiplayer-local\" action = \"\">\n                    <p>Tema de las fichas:     \n                    <select name =\"culturas\" id = \"pueblo\">\n                      <option value = \"otomi\">Otomí/hñähñu </option>\n                      <option value = \"tzotzil\"> Tzotzil </option>\n                      <option value = \"raramuri\"> Rarámuri </option>\n                      <option value = \"nahua\"> Nahua (Hueyapan) </option>\n                    </select></p>\n                    <p>Numero de jugadores:\n                    <input id=\"jugadores\" type=\"number\" min=\"2\" max=\"4\" />\n                    </p>\n                    <button onClick={() => toggleSala()}>\n                      Jugar\n                    </button>\n                    <p></p>\n                    {error}\n                    </form>\n                </div>\n              </li>\n              <p></p>\n              <li class =\"opcion\" id =\"tutorial\">\n                <div class = \"opcionTexto\">\n                  <a class =\"btnInicio\" href=\"#tutorial\">Como jugar</a>\n                </div>\n                <div class =\"submenu\">\n                  <Tutorial />\n                  <a class=\"boton\" href=\"#multiplayer\"> ¡Quiero jugar! </a>\n                </div>\n              </li>\n              <p></p>\n              <li class =\"opcion\" id =\"descargar\">\n                <div class = \"opcionTexto\">\n                  <a class =\"btnInicio\" href=\"#descargar\">Descargar una versión para imprimir</a>\n                </div>\n                <div class =\"submenu\">\n                  <a class=\"boton\" href={pdf_nahua} download=\"Nahua\" target='_blank' rel=\"noreferrer\"> Fichas de origen Nahua </a>\n                  <a class=\"boton\" href={pdf_tz} download=\"Tzotzil\" target='_blank' rel=\"noreferrer\"> Fichas de origen Tzotzil </a>\n                  <a class=\"boton\" href={pdf_otomi} download=\"Otomi\" target='_blank' rel=\"noreferrer\"> Fichas de origen Otomi/hñähñu </a>\n                  <a class=\"boton\" href={pdf_raramuri} download=\"Raramuri\" target='_blank' rel=\"noreferrer\"> Fichas de origen Raramuri </a>\n                </div>\n              </li>\n            </div>  \n        }\n        <div class=\"footer\">\n        <p>Desarrollado por C. S. García Martínez, 2023. Ilustración de C. S. García Martínez, con base en diseños de origen nahua, tzotzil, hñähñu, y rarámuri. Propuesta original y validación del contenido por el Museo Nacional de Antropología.</p>\n        <img src = {imagenes_tutorial.header[\"footer_INAH\"]} alt= \"Logo del INAH\"/>\n        <img src = {imagenes_tutorial.header[\"footer_MNA\"]} alt= \"Logo del Museo Nacional de Antropología\"/>\n        </div>\n      </div>\n\n  );\n}\n\nexport default App;","/home/csgarciamartinez/Telar/telar-client/src/reportWebVitals.js",[],[],"/home/csgarciamartinez/Telar/telar-client/src/Sala.js",["71","72","73","74","75","76","77","78","79","80","81","82","83","84"],[],"import Jugador from './Jugador';\nimport Tutorial from './Tutorial'\nimport React from 'react';\nimport './index.css';\nimport'./sala.css';\nimport'./informacion.css';\nimport imagenes_informacion from './Assets/imagenes.js'\nimport iconos_menu from './Assets/imagenes.js'\n\nconst fs = require('./server/funcionesServidor.js');\nconst puntuacion = require('./server/puntuacion.js');\n\n//Codigo para \nvar VERBOSE = false;\n\n///////////////////////////////\n/* FUNCIONES PARA MANEJAR LA */\n/* INFORMACION               */\n///////////////////////////////\nconst esconderInformacion = () =>{\n    document.getElementById(\"informacion-fondo\").style.display = \"none\";\n  }\n\nconst mostrarInformacion = () =>{\n  let inputs = document.getElementById('ver-menu');\n  inputs.checked = false;\n  document.getElementById(\"informacion-fondo\").style.display = \"block\";\n}\n\nconst esconderInstrucciones = () =>{\n    document.getElementById(\"instrucciones-fondo\").style.display = \"none\";\n  }\n\nconst mostrarInstrucciones = () =>{\n    let inputs = document.getElementById('ver-menu');\n    inputs.checked = false;\n    document.getElementById(\"instrucciones-fondo\").style.display = \"block\";\n  }\n\nconst regresarAlMenu = () =>{\n  window.location.reload(true);\n}\n\n\n/////////////////////////////////\n/* FUNCIONES DE LA INFORMACION */\n/* (TEXTO Y VISUAL)            */\n/////////////////////////////////\n\n//Funcion para mostrar el texto de la informacion del telar de cintura\nconst TelarInfo = () => {\n  return (\n    <div>\n      <p>El telar de cintura es una tecnología prehispánica que es indispensable para la creación de los textiles típicos de una gran parte \n      de los grupos originarios de México y América central. Un extremo del telar se amarra a la cintura, y el otro se ata a un punto seguro. \n      Entonces, el artista va formando el tejido, pasando la trama (los hilos horizontales) por la urdimbre (los hilos verticales). Las varas de madera sirven para diversas funciones, entre \n      ellas el separar los hilos de la urdimbre, el apretar los hilos, y el manejo de colores diferentes. Así se pueden crear diseños en \n      multicolor o en tela doble. </p>\n      <p>El telar de cintura es el instrumento que fue representado en este juego, pero se debe mencionar las varias tradiciones de bordado \n      y brocado, de las cuales también surgen muchos de los diseños típicos de los pueblos de México. </p>\n      <img src = {imagenes_informacion.imagenes_informacion[\"telar\"]} alt = \"Una imagen de un telar de cintura\"/>\n      <ol>\n        <li>1. El extremo de la cuerda que se usa para sujetar el telar.</li>\n        <li>2. El enjulio superior define el ancho del tejido.</li>\n        <li>3. La vara de paso controla los hilos pares</li>\n        <li>4. El machete aprieta los hilos para crear un tejido uniforme.</li>\n        <li>5. La vara de liso controla los hilos impares</li>\n        <li>6. El tejido. </li>\n        <li>7. El enjulio inferior define un extremo del tejido.</li>\n        <li>8. La bobina sirve para pasar el hilo entre la urdimbre.</li>\n        <li>9. El mecapal sujeta el tejido a la cintura del trabajador/a.</li>\n      </ol>\n      <p></p>\n    </div>\n    )\n}\n\n\n//Esta funcion muestra las imagenes adecuadas segun la cultura que fue \n//seleccionada por el jugador en los botones de menu \nconst DisenoMenu = (pueblo, numero) =>{\n  if(pueblo === \"nahua\"){\n    return(\n      <div class = \"menu-content\">\n              <img src = {iconos_menu.iconos_menu[\"nahua\"][0]} alt =\"\" />\n              <img src = {iconos_menu.iconos_menu[\"nahua\"][1]}  alt =\"\" />\n              <img src = {iconos_menu.iconos_menu[\"nahua\"][2]} alt =\"\" />\n            </div>\n    )\n  } else if(pueblo === \"otomi\" && (numero === 1 || numero === 3)){\n    return(\n      <div class = \"menu-content\">\n                    <img src = {iconos_menu.iconos_menu[pueblo][numero]} alt =\"\" />\n                    <img src = {iconos_menu.iconos_menu[pueblo][numero]} alt =\"\" style = {{transform: 'scaleX(-1)'}}/>\n                    <img src = {iconos_menu.iconos_menu[pueblo][numero]} alt =\"\" />\n                    <img src = {iconos_menu.iconos_menu[pueblo][numero]} alt =\"\" style = {{transform: 'scaleX(-1)'}}/>\n                  </div>\n    )\n  } else {\n    return(\n      <div class = \"menu-content\">\n                    <img src = {iconos_menu.iconos_menu[pueblo][numero]} alt =\"\"/>\n                    <img src = {iconos_menu.iconos_menu[pueblo][numero]} alt =\"\" />\n                    <img src = {iconos_menu.iconos_menu[pueblo][numero]} alt =\"\"/>\n                    <img src = {iconos_menu.iconos_menu[pueblo][numero]}  alt =\"\" />\n                  </div>\n    )\n  }\n}\n\n//Esta funcion muestra las instrucciones \nconst Instrucciones = () => {\n  return(<div class = \"informacion\">\n    {Tutorial()}\n    <button onClick={esconderInstrucciones}> x </button>\n  </div>)\n}\n\n//Esta funcion contiene la informacion que corresponde a cada pueblo originario\nconst Informacion = ({pueblo}) =>{\n  if(pueblo === \"otomi\"){\n    return(\n        <div class = \"informacion\">\n          <h1>Otomi </h1>\n          <p>El pueblo otomí, también conocido como el pueblo hñähñu, ñathño, o ñ'yühü, es un pueblo originario del centro de México. Existen diversas comunidades de habla otomí, cada una con sus diseños propios y artes tradicionales. Los diseños suelen representar la vegetación y los animales de la región. Estos se pueden realizar sobre telar de cintura o con bordados pepenados. </p>\n          <img src = {imagenes_informacion.imagenes_informacion[\"otomi\"][\"p3\"]} />\n                  <img src = {imagenes_informacion.imagenes_informacion[\"otomi\"][\"p2\"]} />\n          <img src = {imagenes_informacion.imagenes_informacion[\"otomi\"][\"p1\"]} />\n          <p>Para crear estos diseños, se tomó como referencia el libro <a href=\"https://contigoenladistancia.cultura.gob.mx/detalle/geometrias-de-la-imaginacion-hidalgo\">Geometrías de la Imaginación: Hidalgo</a>, coordinado por Carmen Lorenzo Monterrubio. También se tomaron como referencia las artesanías del colectivo <a href=\"https://www.savinarte.com/2019/06/11/artesanas-de-hidalgo-colectivos-para-dignificar-el-trabajo-artesanal-del-tenango/\">Mëxandähi</a>, ubicado en San Francisco La Laguna, Hidalgo, el colectivo <a href=\"https://folkartcollective.com/rosalina/\">Tierra Yuhmu</a>, ubicado en San Juan Ixtenco, Tlaxcala, y el colectivo <a href=\"https://cooperacioncomunitaria.org/hidalgo/\">Wäda</a>, ubicado en El Decá, Hidalgo. </p>\n\n          <h1>¿Qué es el telar de cintura? </h1>\n          <TelarInfo />\n          <button onClick={esconderInformacion}> x </button>\n        </div>\n    )\n  } else if(pueblo === \"tzotzil\"){\n    return(\n      <div class = \"informacion\">\n          <h1>Tzotzil </h1>\n          <p>El pueblo tzotzil es un pueblo maya, originario del sur de México, que radica principalmente en el norte del estado de Chiapas. Los tejidos tzotziles suelen representar narrativas, personajes, e ideas importantes de las creencias de la comunidad, creados sobre telar de cintura o bordados.  </p>\n          <img src = {imagenes_informacion.imagenes_informacion[\"tzotzil\"][\"p1\"]} />\n          <img src = {imagenes_informacion.imagenes_informacion[\"tzotzil\"][\"p2\"]} />\n          <img src = {imagenes_informacion.imagenes_informacion[\"tzotzil\"][\"p3\"]} />\n          <p>Para crear estos diseños, se tomó como referencia el libro <a href = \"https://contigoenladistancia.cultura.gob.mx/detalle/geometrias-de-la-imaginacion-chiapas\">Geometrías de la Imaginación: Chiapas</a>, coordinado por Walter S. Morris, Jr. También se tomaron como referencia las artesanías del colectivo <a href=\"https://www.instagram.com/sna_jolobil/\">Sna Jolobil</a>, con sede principal en San Cristóbal de las Casas, y la línea de prensas <a href=\"https://www.kuxulpok.mx/\">K’uxul’ Pok’</a>, también ubicada en San Cristóbal de las Casas. </p>\n          <h1> ¿Qué es el telar de cintura? </h1>\n          <TelarInfo />\n          <button onClick={esconderInformacion}> x </button>\n        </div>\n    ) \n  } else if(pueblo === \"raramuri\"){\n    return(\n      <div class = \"informacion\">\n          <h1>Rarámuri </h1>\n          <p>El pueblo rarámuri, también conocido como el pueblo tarahumara, es un pueblo originario del norte de México. La palabra “rarámuri” significa literalmente “pies ligeros”, lo cual refleja la fuerte tradición de correr a pie. Los tejidos rarámuri que fueron destacados en este juego son aquellos que son tejidos en las fajas con las cuales se sujetan los atuendos tradicionales. Los significados de estos símbolos son diversos y a menudo abstractos, reflejando la naturaleza de la región además de importantes conocimientos y relatos rarámuri. </p>\n                    <img src = {imagenes_informacion.imagenes_informacion[\"raramuri\"][\"p1\"]} />\n          <img src = {imagenes_informacion.imagenes_informacion[\"raramuri\"][\"p2\"]} />\n          <p>Estos diseños se crearon en base a escritos de Aguilera Madrigal, Alejandro Gonzalez Villarruel, y Norbert Diaz de Arce. Se tomó como referencia también las obras de la artesana Catalina Batista Parra, diseños del grupo <a href=\"https://original.cultura.gob.mx/participantes/maria-del-refugio-bustillos-garcia\">Umuki Suami</a> de Delicias, Chihuahua, y artesanías de la municipalidad de Coyachique. </p>\n          <h1>¿Qué es el telar de cintura? </h1>\n          <TelarInfo />\n          <button onClick={esconderInformacion}> x </button>\n        </div>\n    ) \n  } else if(pueblo === \"nahua\"){\n    return(\n      <div class = \"informacion\">\n          <h1>Nahua </h1>\n          <p>El pueblo nahua es un pueblo originario de México. Es uno de los más diversos y numerosos en el país, con comunidades en el oeste y el centro de México. Existen una gran variedad de artes textiles que se practican en comunidades de habla náhuatl, mas en este juego se destacan principalmente los diseños del árbol de la vida, en particular los diseños de la comunidad de Hueyapan, en el estado de Puebla. El árbol de la vida es un diseño, a veces bordado y a veces tejido, del oeste de país, que representa un árbol mítico que originó a todo el universo. El árbol de la vida también se encuentra en diseños de comunidades totonacas, otomíes, y tepehuas. </p>\n          <img src = {imagenes_informacion.imagenes_informacion[\"nahua\"][\"p1\"]} />\n          <img src = {imagenes_informacion.imagenes_informacion[\"nahua\"][\"p2\"]} />\n          <p>Para crear estos diseños, se tomó como referencia el libro <a href=\"https://contigoenladistancia.cultura.gob.mx/detalle/geometrias-de-la-imaginacion-puebla\">Geometrías de la Imaginación: Puebla</a>, coordinado por Carmen Lorenzo Monterrubio. También se tomaron como referencia las artesanías del colectivo <a href=\"https://www.tayol.mx/\">Tayol</a> y del colectivo <a href =\"https://www.instagram.com/sohuame_tlatzonkime\">Sohuame Tlatzonkime</a>, ambos ubicados en Hueyapán, Puebla.</p>\n          <h1> ¿Qué es el telar de cintura? </h1>\n          <TelarInfo />\n          <button onClick={esconderInformacion}> x </button>\n        </div>\n    ) \n  } else {\n    <div class = \"informacion\">\n          <h1>Otomi </h1>\n          <p>El pueblo otomí, también conocido como el pueblo hñähñu, ñathño, o ñ'yühü, es un pueblo originario del centro de México. Existen diversas comunidades de habla otomí, cada una con sus diseños propios y artes tradicionales. Los diseños suelen representar la vegetación y los animales de la región. Estos se pueden realizar sobre telar de cintura o con bordados pepenados. </p>\n          <img src = {imagenes_informacion.imagenes_informacion[\"otomi\"][\"p3\"]} />\n          <img src = {imagenes_informacion.imagenes_informacion[\"otomi\"][\"p2\"]} />\n          <img src = {imagenes_informacion.imagenes_informacion[\"otomi\"][\"p1\"]} />\n          <h1> Que es el telar de cintura </h1>\n          <TelarInfo />\n          <button onClick={esconderInformacion}> x </button>\n        </div>\n  }\n}\n\n\n//////////////////////////////////////////\n/* CODIGO PRINCIPAL DE LA SALA DE JUEGO */\n//////////////////////////////////////////\nconst Sala = ({sala, socket, setSala, setTurno, setRonda}) => {\n  var jugadores = [];\n  const client = socket;\n\n\n  //Codigo para reiniciar el juego \n  const reiniciarSala = () =>{\n    let inputs = document.getElementById('ver-menu');\n    inputs.checked = false;\n    var nuevaSala = fs.nuevaSala(0, \"Local\", sala[\"pueblo\"], true)\n    for(let i = 1; i < sala[\"usuarios\"].length; i++){\n            nuevaSala[\"usuarios\"].push(fs.nuevoJugador(i))\n          }\n          // socket.close()\n    setSala(nuevaSala)\n  }\n\n  /////////////////////////////////////////////////\n  /* Funciones para comenzar el juego, hacer una */ \n  /* jugada, etc.                                */\n  /////////////////////////////////////////////////\n  // Funcion para comenzar el juego\n  const comenzar = () =>{\n    if(VERBOSE){\n        console.log(\"Se comenzo el juego\")\n      }\n      //Copiar la sala actual\n      var newSala = JSON.parse(JSON.stringify(sala))\n      sala = fs.comenzarJuego(newSala)\n      if(VERBOSE){\n        console.log(\"Sala tras comenzar el juego:\")\n        console.log(sala)\n      }\n      setSala(sala)\n      setTurno(0)\n      setRonda(0)\n  }\n\n  //Funcion para hacer una jugada \n  const hacerJugada = (state) => {\n    sala[\"usuarios\"][sala[\"turno\"]][\"columnas\"] = state[\"cols\"]\n      sala[\"usuarios\"][sala[\"turno\"]][\"basura\"] = state[\"basura\"]\n      sala[\"usuarios\"][sala[\"turno\"]][\"canasta\"] = []\n      var siguiente = sala[\"turno\"] + 1 //El siguiente jugador\n      if(sala[\"turno\"] === sala[\"usuarios\"].length-1){\n        siguiente = 0 \n      }\n\n      for(const f in state[\"fichasEnCanasta\"]){\n        sala[\"usuarios\"][siguiente][\"canasta\"].push(state[\"fichasEnCanasta\"][f])\n      }\n      sala[\"turno\"] = sala[\"usuarios\"][siguiente][\"usuario\"] \n      sala[\"sala\"] = sala[\"turno\"];\n      \n      if(VERBOSE){\n        console.log(\"Se hizo una jugada. Sala tras la jugada: \")\n        console.log(sala)\n      }\n      setSala(sala)\n      setTurno(sala[\"turno\"])\n  }\n\n  //Funcion para acabar la ronda \n  const acabarRonda = (state) => {\n    if(!sala[\"local\"]){\n      socket.current.emit('ronda', sala[\"sala\"], state)\n    } else {\n      \n      var newSala = JSON.parse(JSON.stringify(puntuacion.bajarFichasYSacarPuntuacion(sala, state))) //deep copy \n      if(VERBOSE){\n        console.log(\"Se acabo la ronda. Sala tras el final de la ronda: \")\n        console.log(newSala)\n      }\n      setSala(newSala);\n      setTurno(newSala[\"turno\"])\n      setRonda(newSala[\"ronda\"])\n      sala = newSala\n    }\n  }\n\n\n  //////////////////////////////////////////////////\n  /* Codigo que siempre va a suceder al crear una */ \n  /* nueva sala de juego                          */\n  //////////////////////////////////////////////////\n\n  //Si es el final del juego, se encuentra el ganador\n  if(sala[\"status\"] === \"final\"){\n    var puntuacion_maxima = -1\n    //Sacar la puntuacion maxima\n    for(const usr in sala[\"usuarios\"]){\n      if(sala[\"usuarios\"][usr][\"puntuacion\"][0] > puntuacion_maxima){\n        puntuacion_maxima = sala[\"usuarios\"][usr][\"puntuacion\"][0]\n      }\n    }\n    for(const usr in sala[\"usuarios\"]){\n      if(puntuacion_maxima === sala[\"usuarios\"][usr][\"puntuacion\"][0]){\n        jugadores.push(<Jugador jugador = {usr}\n                              status = \"final\"\n                              ganador = {true}\n                              sala = {sala}\n                              socket = {client}\n                              key = {sala[\"usuarios\"][usr][\"usuario\"]}/>)\n      } else {\n        jugadores.push(<Jugador jugador = {usr}\n                              status = \"final\"\n                              sala = {sala}\n                              ganador = {false}\n                              socket = {client}\n                              key = {sala[\"usuarios\"][usr][\"usuario\"]}/>)\n      }\n    }\n  }\n\n  //Crear los jugadores segun la sala actual\n  else if(sala[\"status\"] === \"activo\"){\n\n    for(const usr in sala[\"usuarios\"]){\n      if(sala[\"turno\"] == usr){\n        jugadores.push(<Jugador jugador = {usr}\n                              status = \"activo\"\n                              sala = {sala}\n                              socket = {client}\n                              hacerJugada = {hacerJugada}\n                              acabarRonda = {acabarRonda}\n                              key = {sala[\"usuarios\"][usr][\"usuario\"]}/>)\n      } else {\n        jugadores.push(<Jugador jugador = {usr}\n                              status = \"inactivo\"\n                              sala = {sala}\n                              socket = {client}\n                              key = {sala[\"usuarios\"][usr][\"usuario\"]}/>)\n      }\n    }\n  } else { //Si no ha comenzado el juego \n    for(const usr in sala[\"usuarios\"]){\n      jugadores.push(<Jugador jugador = {usr}\n                              sala = {sala} \n                              status= \"comienzo\"\n                              key={sala[\"usuarios\"][usr][\"usuario\"]}/>);\n    }\n  }\n\n  return(\n    <div>\n        <input id=\"ver-menu\" type=\"checkbox\" /><label for=\"ver-menu\"><p>Opciones</p></label>\n        <div class = \"menu-informacion-contenido\">\n          <div class = \"menu-btn\" onClick = {regresarAlMenu}> \n            <button>Menu</button>\n            {DisenoMenu(sala[\"pueblo\"], 0)}\n          </div>\n          <div class = \"menu-btn\" onClick = {mostrarInformacion}> \n            <button>Conoce quien creó estos diseños</button>\n                        {DisenoMenu(sala[\"pueblo\"], 1)}\n          </div>\n          <div class = \"menu-btn\" onClick = {mostrarInstrucciones}> \n            <button>Ver instrucciones</button>\n                        {DisenoMenu(sala[\"pueblo\"], 2)}\n          </div>\n          <div class = \"menu-btn\" onClick = {reiniciarSala}> \n            <button>Reiniciar juego</button>\n                        {DisenoMenu(sala[\"pueblo\"], 3)}\n          </div>\n    </div>  \n      {!sala[\"local\"] ? <h1>Sala de juego \"{sala[\"sala\"]}\"</h1>  : \"\"}   \n      <div id = \"informacion-fondo\" class = \"fondo\">\n        <Informacion pueblo = {sala[\"pueblo\"]} />\n      </div>\n      <div id = \"instrucciones-fondo\" class = \"fondo\">\n        <Instrucciones/>\n      </div>\n      <div class =\"sala\">\n        {sala[\"status\"] === \"activo\" || sala[\"status\"] === \"final\"\n          ? \n            <div class=\"jugadores\" key=\"boards1\">{jugadores}</div>\n            :\n            <div>\n            <div id=\"comenzarBtn\">\n              <button onClick={comenzar}>\n                Comenzar\n              </button>\n            </div>\n            <div class=\"jugadores\" key=\"boards2\"> \n            {jugadores}\n            </div>\n            \n          </div>\n        }\n    </div>\n    </div>\n  )\n}\n\nexport default Sala;","/home/csgarciamartinez/Telar/telar-client/src/Jugador.js",[],[],"/home/csgarciamartinez/Telar/telar-client/src/Tablero.js",["85","86","87"],[],"import React from 'react';\nimport ItemTypes from './ItemTypes'\n\n/***************************\n * Las imagenes/los iconos *\n * del tablero, donde se   *\n * colocan las fichas      *\n * *************************/\nimport v2_i from './Assets/vara1_izq.png';\nimport v02 from './Assets/vara1_5.png';\nimport v12 from './Assets/vara1_4.png';\nimport v22 from './Assets/vara1_3.png';\nimport v32 from './Assets/vara1_2.png';\nimport v42 from './Assets/vara1_1.png';\nimport v2_d from './Assets/vara1_der.png';\n\nimport v01 from './Assets/vara2_izq.png';\nimport v11 from './Assets/vara2_3.png';\nimport v21 from './Assets/vara2_2.png';\nimport v31 from './Assets/vara2_1.png';\nimport v41 from './Assets/vara2_der.png';\n\nimport v0_i from './Assets/enjulio_sup_izq.png';\nimport v00 from './Assets/enjulio_sup_5.png';\nimport v10 from './Assets/enjulio_sup_4.png';\nimport v20 from './Assets/enjulio_sup_3.png';\nimport v30 from './Assets/enjulio_sup_2.png';\nimport v40 from './Assets/enjulio_sup_1.png';\nimport v0_d from './Assets/enjulio_sup_der.png';\n\nimport e_i from './Assets/enjulio_bajo_izq.png';\nimport e from './Assets/enjulio_bajo.png';\nimport e_d from './Assets/enjulio_bajo_der.png';\n\nconst TAMANO_SQUARE = 40;\n\n//Una posicion en el telar, en la parte inferior\nfunction Square(props) {\n  return (\n    <div className=\"square telarsquare\" style = {props.style}>\n      {props.subconjunto}\n      {props.value}\n    </div>\n  );\n}\n\n//Una posicion en la parte superior del telar\nfunction ColSquare(props) {\n  //\"valido\" solo si se puede colocar una ficha en aquella posicion \n  var classname = props.valido ? \"square col-square valido\" :\"square col-square\" \n  return (\n    <div style={{backgroundImage: `url(${props.image})`}} className={classname} onClick = {props.onclick}>\n      {props.value}\n    </div>\n  )\n};\n\n\n//El div que se~nala los subconjuntos que fueron bajados en la ronda \n//pasada \nfunction Subconjunto(props){\n  return(\n    <div className=\"subconjunto\" style={{width:props.width, height:props.height, left:props.left, bottom:props.bottom}}></div>\n  );\n}\n\n/***************************\n **** El tablero     *******\n ***************************/\nclass Tablero extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n\n  renderSquare(i) {\n    if(this.props.tableroFichas){\n      return (\n          <Square\n            value={this.props.tableroFichas[i]}\n          />\n        );\n    } else { //En este caso, solo se ve el hilo del telar\n      return (\n        <Square\n          value={null}\n        />\n      );\n    }\n  }\n\n  renderColSquare(col, fil, img) {\n    return (\n      <ColSquare\n        value={this.props.cols[col][fil]}\n        valido = {this.props.opacities[col][fil]}\n        onclick = {() => this.fichaEnColumna(col, this.props.ficha)}\n        image = {img}\n      />\n    );\n  }\n\n  fichaEnColumna(col, ficha){\n    this.props.ponerFicha(col, ficha)\n  }\n\n  //Este codigo crea los divs que aparecen sobre los subconjuntos que se crearon\n  //la ronda anterior \n  sacarPuntuacion(){\n    var puntos = Array()\n    if(this.props.puntuacion){\n      for(const sc in this.props.puntuacion[0]){\n        puntos.push(<Subconjunto \n                        width={TAMANO_SQUARE}\n                        height={(parseInt(this.props.puntuacion[0][sc][1]) + 1 -parseInt(this.props.puntuacion[0][sc][0])) * TAMANO_SQUARE}\n                        left = {TAMANO_SQUARE+(sc * TAMANO_SQUARE)}\n                        bottom = {TAMANO_SQUARE+(parseInt(this.props.puntuacion[0][sc][0])* TAMANO_SQUARE)} />)\n      }\n      for(const fila in this.props.puntuacion[1]){\n        for(const sc in this.props.puntuacion[1][fila]){\n          puntos.push(<Subconjunto \n                        width={(parseInt(this.props.puntuacion[1][fila][sc][1]) + 1 -parseInt(this.props.puntuacion[1][fila][sc][0])) * TAMANO_SQUARE}\n                        height={TAMANO_SQUARE}\n                        left = {TAMANO_SQUARE + (parseInt(this.props.puntuacion[1][fila][sc][0]) * TAMANO_SQUARE)}\n                        bottom = {TAMANO_SQUARE + (TAMANO_SQUARE*fila)} />)\n        }\n      }\n    }\n    return puntos\n  }\n\n  render() {\n    //El html/JSX del tablero\n    return (\n      <div className=\"tablero\">\n        {this.sacarPuntuacion()}\n        <div className=\"board-row\">\n          <div class=\"square\" style={{backgroundImage: `url(${v2_i})`}}></div>\n          {this.renderColSquare(0, 2, v02)}\n          <div class=\"square\" style={{backgroundImage: `url(${v12})`}}></div>\n          <div class=\"square\" style={{backgroundImage: `url(${v22})`}}></div>\n          <div class=\"square\" style={{backgroundImage: `url(${v32})`}}></div>\n          {this.renderColSquare(4, 2, v42)}\n          <div class=\"square\" style={{backgroundImage: `url(${v2_d})`}}></div>\n        </div>\n        <div className=\"board-row\">\n          <div class=\"square\"> </div>\n          {this.renderColSquare(0, 1, v01)}\n          {this.renderColSquare(1, 1, v11)}\n          <div class=\"square\" style={{backgroundImage: `url(${v21})`}}></div>\n          {this.renderColSquare(3, 1, v31)}\n          {this.renderColSquare(4, 1, v41)}\n        </div>\n        <div className=\"board-row\">\n          <div class=\"square\" style={{backgroundImage: `url(${v0_i})`}}></div>\n          {this.renderColSquare(0, 0, v00)}\n          {this.renderColSquare(1, 0, v10)}\n          {this.renderColSquare(2, 0, v20)}\n          {this.renderColSquare(3, 0, v30)}\n          {this.renderColSquare(4, 0, v40)}\n          <div class=\"square\" style={{backgroundImage: `url(${v0_d})`}}></div>\n        </div>\n        <div className=\"board-row\">\n          <div class=\"square\"> </div>\n          {this.renderSquare(4)}\n          {this.renderSquare(9)}\n          {this.renderSquare(14)}\n          {this.renderSquare(19)}\n          {this.renderSquare(24)}\n        </div>\n        <div className=\"board-row\">\n          <div class=\"square\"> </div>\n          {this.renderSquare(3)}\n          {this.renderSquare(8)}\n          {this.renderSquare(13)}\n          {this.renderSquare(18)}\n          {this.renderSquare(23)}\n        </div>\n        <div className=\"board-row\">\n          <div class=\"square\"> </div>\n          {this.renderSquare(2)}\n          {this.renderSquare(7)}\n          {this.renderSquare(12)}\n          {this.renderSquare(17)}\n          {this.renderSquare(22)}\n        </div>\n        <div className=\"board-row\">\n          <div class=\"square\"> </div>\n          {this.renderSquare(1)}\n          {this.renderSquare(6)}\n          {this.renderSquare(11)}\n          {this.renderSquare(16)}\n          {this.renderSquare(21)}\n        </div>\n        <div className=\"board-row\">\n          <div class=\"square\"> </div>\n          {this.renderSquare(0)}\n          {this.renderSquare(5)}\n          {this.renderSquare(10)}\n          {this.renderSquare(15)}\n          {this.renderSquare(20)}\n        </div>\n        <div className=\"board-row\">\n          <div class=\"square\"></div>\n          <div class=\"square\" style={{backgroundImage: `url(${e_i})`}}></div>\n          <div class=\"square\" style={{backgroundImage: `url(${e})`}}></div>\n          <div class=\"square\" style={{backgroundImage: `url(${e})`}}></div>\n          <div class=\"square\" style={{backgroundImage: `url(${e})`}}></div>\n          <div class=\"square\" style={{backgroundImage: `url(${e_d})`}}></div>\n          <div class=\"square\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Tablero;","/home/csgarciamartinez/Telar/telar-client/src/ItemTypes.js",[],[],"/home/csgarciamartinez/Telar/telar-client/src/Ficha.js",[],[],"/home/csgarciamartinez/Telar/telar-client/src/Assets/imagenes.js",["88","89"],[],"import otomi_azul1 from './otomi/azul1.png';\nimport otomi_azul2 from './otomi/azul2.png';\nimport otomi_azul3 from './otomi/azul3.png';\nimport otomi_azul4 from './otomi/azul4.png';\nimport otomi_azul5 from './otomi/azul5.png';\nimport otomi_blanco1 from './otomi/blanco1.png';\nimport otomi_blanco2 from './otomi/blanco2.png';\nimport otomi_blanco3 from './otomi/blanco3.png';\nimport otomi_blanco4 from './otomi/blanco4.png';\nimport otomi_blanco5 from './otomi/blanco5.png';\nimport otomi_negro1 from './otomi/negro1.png';\nimport otomi_negro2 from './otomi/negro2.png';\nimport otomi_negro3 from './otomi/negro3.png';\nimport otomi_negro4 from './otomi/negro4.png';\nimport otomi_negro5 from './otomi/negro5.png';\nimport otomi_rojo1 from './otomi/rojo1.png';\nimport otomi_rojo2 from './otomi/rojo2.png';\nimport otomi_rojo3 from './otomi/rojo3.png';\nimport otomi_rojo4 from './otomi/rojo4.png';\nimport otomi_rojo5 from './otomi/rojo5.png';\nimport otomi_verde1 from './otomi/verde1.png';\nimport otomi_verde2 from './otomi/verde2.png';\nimport otomi_verde3 from './otomi/verde3.png';\nimport otomi_verde4 from './otomi/verde4.png';\nimport otomi_verde5 from './otomi/verde5.png';\n\nimport tzotzil_azul1 from './tzotzil/azul1.png';\nimport tzotzil_azul2 from './tzotzil/azul2.png';\nimport tzotzil_azul3 from './tzotzil/azul3.png';\nimport tzotzil_azul4 from './tzotzil/azul4.png';\nimport tzotzil_azul5 from './tzotzil/azul5.png';\nimport tzotzil_blanco1 from './tzotzil/blanco1.png';\nimport tzotzil_blanco2 from './tzotzil/blanco2.png';\nimport tzotzil_blanco3 from './tzotzil/blanco3.png';\nimport tzotzil_blanco4 from './tzotzil/blanco4.png';\nimport tzotzil_blanco5 from './tzotzil/blanco5.png';\nimport tzotzil_negro1 from './tzotzil/negro1.png';\nimport tzotzil_negro2 from './tzotzil/negro2.png';\nimport tzotzil_negro3 from './tzotzil/negro3.png';\nimport tzotzil_negro4 from './tzotzil/negro4.png';\nimport tzotzil_negro5 from './tzotzil/negro5.png';\nimport tzotzil_rojo1 from './tzotzil/rojo1.png';\nimport tzotzil_rojo2 from './tzotzil/rojo2.png';\nimport tzotzil_rojo3 from './tzotzil/rojo3.png';\nimport tzotzil_rojo4 from './tzotzil/rojo4.png';\nimport tzotzil_rojo5 from './tzotzil/rojo5.png';\nimport tzotzil_verde1 from './tzotzil/verde1.png';\nimport tzotzil_verde2 from './tzotzil/verde2.png';\nimport tzotzil_verde3 from './tzotzil/verde3.png';\nimport tzotzil_verde4 from './tzotzil/verde4.png';\nimport tzotzil_verde5 from './tzotzil/verde5.png';\n\nimport raramuri_azul1 from './raramuri/azul1.png';\nimport raramuri_azul2 from './raramuri/azul2.png';\nimport raramuri_azul3 from './raramuri/azul3.png';\nimport raramuri_azul4 from './raramuri/azul4.png';\nimport raramuri_azul5 from './raramuri/azul5.png';\nimport raramuri_blanco1 from './raramuri/blanco1.png';\nimport raramuri_blanco2 from './raramuri/blanco2.png';\nimport raramuri_blanco3 from './raramuri/blanco3.png';\nimport raramuri_blanco4 from './raramuri/blanco4.png';\nimport raramuri_blanco5 from './raramuri/blanco5.png';\nimport raramuri_negro1 from './raramuri/negro1.png';\nimport raramuri_negro2 from './raramuri/negro2.png';\nimport raramuri_negro3 from './raramuri/negro3.png';\nimport raramuri_negro4 from './raramuri/negro4.png';\nimport raramuri_negro5 from './raramuri/negro5.png';\nimport raramuri_rojo1 from './raramuri/rojo1.png';\nimport raramuri_rojo2 from './raramuri/rojo2.png';\nimport raramuri_rojo3 from './raramuri/rojo3.png';\nimport raramuri_rojo4 from './raramuri/rojo4.png';\nimport raramuri_rojo5 from './raramuri/rojo5.png';\nimport raramuri_verde1 from './raramuri/verde1.png';\nimport raramuri_verde2 from './raramuri/verde2.png';\nimport raramuri_verde3 from './raramuri/verde3.png';\nimport raramuri_verde4 from './raramuri/verde4.png';\nimport raramuri_verde5 from './raramuri/verde5.png';\n\nimport nahua_azul1 from './nahua/azul1.png';\nimport nahua_azul2 from './nahua/azul2.png';\nimport nahua_azul3 from './nahua/azul3.png';\nimport nahua_azul4 from './nahua/azul4.png';\nimport nahua_azul5 from './nahua/azul5.png';\nimport nahua_blanco1 from './nahua/blanco1.png';\nimport nahua_blanco2 from './nahua/blanco2.png';\nimport nahua_blanco3 from './nahua/blanco3.png';\nimport nahua_blanco4 from './nahua/blanco4.png';\nimport nahua_blanco5 from './nahua/blanco5.png';\nimport nahua_negro1 from './nahua/negro1.png';\nimport nahua_negro2 from './nahua/negro2.png';\nimport nahua_negro3 from './nahua/negro3.png';\nimport nahua_negro4 from './nahua/negro4.png';\nimport nahua_negro5 from './nahua/negro5.png';\nimport nahua_rojo1 from './nahua/rojo1.png';\nimport nahua_rojo2 from './nahua/rojo2.png';\nimport nahua_rojo3 from './nahua/rojo3.png';\nimport nahua_rojo4 from './nahua/rojo4.png';\nimport nahua_rojo5 from './nahua/rojo5.png';\nimport nahua_verde1 from './nahua/verde1.png';\nimport nahua_verde2 from './nahua/verde2.png';\nimport nahua_verde3 from './nahua/verde3.png';\nimport nahua_verde4 from './nahua/verde4.png';\nimport nahua_verde5 from './nahua/verde5.png';\n\nimport otomi_personaje1 from './otomi/personaje1.png'\nimport otomi_personaje2 from './otomi/personaje2.png'\nimport otomi_personaje3 from './otomi/personaje3.png'\n\nimport nahua_personaje1 from './nahua/personaje1.png'\nimport nahua_personaje2 from './nahua/personaje2.png'\n\nimport raramuri_personaje1 from './raramuri/personaje1.png'\nimport raramuri_personaje2 from './raramuri/personaje2.png'\n\nimport tzotzil_personaje1 from './tzotzil/personaje1.png'\nimport tzotzil_personaje2 from './tzotzil/personaje2.png'\nimport tzotzil_personaje3 from './tzotzil/personaje3.png'\n\n\nimport telar_de_cintura from './telar de cintura.png'\nimport ins1 from './instrucciones_digital1.png'\nimport ins2 from './instrucciones_digital2.png'\nimport ins22 from './instrucciones_digital2_2.png'\nimport ins3 from './instrucciones_digital3.png'\nimport ins4 from './instrucciones_digital4.png'\nimport ins5 from './instrucciones_digital5.png'\nimport ins52 from './instrucciones_digital5_2.png'\nimport ins6 from './instrucciones_digital6.png'\nimport ins7 from './instrucciones_digital7.png'\n\nimport telar from './telar.png'\nimport mna from './museo.png'\nimport inah from './Logo_INAH.png'\n\nimport menu from './menu.png'\nimport menu_nahua1 from './nahua/menu1.png'\nimport menu_nahua2 from './nahua/menu2.png'\nimport menu_nahua3 from './nahua/menu3.png'\nimport menu_tzotzil1 from './tzotzil/menu1.png'\nimport menu_tzotzil2 from './tzotzil/menu2.png'\nimport menu_tzotzil3 from './tzotzil/menu3.png'\nimport menu_tzotzil4 from './tzotzil/menu4.png'\nimport menu_otomi1 from './otomi/menu1.png'\nimport menu_otomi2 from './otomi/menu2.png'\nimport menu_otomi3 from './otomi/menu3.png'\nimport menu_otomi4 from './otomi/menu4.png'\nimport menu_raramuri1 from './raramuri/menu1.png'\nimport menu_raramuri2 from './raramuri/menu2.png'\nimport menu_raramuri3 from './raramuri/menu3.png'\nimport menu_raramuri4 from './raramuri/menu4.png'\n\n\n\nconst imagenes_fichas = {\n  otomi: {\n    azul: [otomi_azul1, otomi_azul2, otomi_azul3, otomi_azul4, otomi_azul5],\n    blanco: [otomi_blanco1, otomi_blanco2, otomi_blanco3, otomi_blanco4, otomi_blanco5],\n    negro: [otomi_negro1, otomi_negro2, otomi_negro3, otomi_negro4, otomi_negro5],\n    rojo: [otomi_rojo1, otomi_rojo2, otomi_rojo3, otomi_rojo4, otomi_rojo5],\n    verde: [otomi_verde1, otomi_verde2, otomi_verde3, otomi_verde4, otomi_verde5],\n  },\n  tzotzil: {\n    azul: [tzotzil_azul1, tzotzil_azul2, tzotzil_azul3, tzotzil_azul4, tzotzil_azul5],\n    blanco: [tzotzil_blanco1, tzotzil_blanco2, tzotzil_blanco3, tzotzil_blanco4, tzotzil_blanco5],\n    negro: [tzotzil_negro1, tzotzil_negro2, tzotzil_negro3, tzotzil_negro4, tzotzil_negro5],\n    rojo: [tzotzil_rojo1, tzotzil_rojo2, tzotzil_rojo3, tzotzil_rojo4, tzotzil_rojo5],\n    verde: [tzotzil_verde1, tzotzil_verde2, tzotzil_verde3, tzotzil_verde4, tzotzil_verde5],\n  },\n  raramuri: {\n        azul: [raramuri_azul1, raramuri_azul2, raramuri_azul3, raramuri_azul4, raramuri_azul5],\n    blanco: [raramuri_blanco1, raramuri_blanco2, raramuri_blanco3, raramuri_blanco4, raramuri_blanco5],\n    negro: [raramuri_negro1, raramuri_negro2, raramuri_negro3, raramuri_negro4, raramuri_negro5],\n    rojo: [raramuri_rojo1, raramuri_rojo2, raramuri_rojo3, raramuri_rojo4, raramuri_rojo5],\n    verde: [raramuri_verde1, raramuri_verde2, raramuri_verde3, raramuri_verde4, raramuri_verde5],\n  },\n  nahua: {\n    azul: [nahua_azul1, nahua_azul2, nahua_azul3, nahua_azul4, nahua_azul5],\n    blanco: [nahua_blanco1, nahua_blanco2, nahua_blanco3, nahua_blanco4, nahua_blanco5],\n    negro: [nahua_negro1, nahua_negro2, nahua_negro3, nahua_negro4, nahua_negro5],\n    rojo: [nahua_rojo1, nahua_rojo2, nahua_rojo3, nahua_rojo4, nahua_rojo5],\n    verde: [nahua_verde1, nahua_verde2, nahua_verde3, nahua_verde4, nahua_verde5],\n  }\n}\n\nconst imagenes_informacion = {\n  telar: telar_de_cintura,\n  otomi: {\n    p1: otomi_personaje1,\n    p2: otomi_personaje2,\n    p3: otomi_personaje3 \n  },\n  tzotzil: {\n    p1: tzotzil_personaje1,\n    p2: tzotzil_personaje2,\n    p3: tzotzil_personaje3 \n  },\n    raramuri: {\n    p1: raramuri_personaje1,\n    p2: raramuri_personaje2,\n  },\n  nahua: {\n    p1: nahua_personaje1,\n    p2: nahua_personaje2,\n  }\n\n}\n\nconst imagenes_tutorial = {\n  instruccion1: ins1,\n  instruccion2: ins2,\n  instruccion22: ins22,\n  instruccion3: ins3,\n  instruccion4: ins4,\n  instruccion5: ins5,\n  instruccion52: ins52,\n  instruccion6: ins6,\n  instruccion7: ins7,\n}\n\nconst header = {\n  header: telar,\n  footer_INAH: inah,\n  footer_MNA: mna\n}\n\nconst iconos_menu = {\n  nahua : [menu_nahua1, menu_nahua2, menu_nahua3],\n  raramuri : [menu_raramuri1, menu_raramuri2, menu_raramuri3, menu_raramuri4],\n  otomi : [menu_otomi1, menu_otomi2, menu_otomi3, menu_otomi4],\n  tzotzil : [menu_tzotzil1, menu_tzotzil2, menu_tzotzil3, menu_tzotzil4],\n}\n\nexport default {\n  imagenes_fichas, \n  imagenes_informacion, \n  imagenes_tutorial,\n  header, \n  iconos_menu,\n};",[],"/home/csgarciamartinez/Telar/telar-client/src/server/funcionesServidor.js",[],[],"/home/csgarciamartinez/Telar/telar-client/src/server/puntuacion.js",["90"],[],"const fs = require('./funcionesServidor.js');\n\n\nconst fichas =fs.crearFichas();\nvar VERBOSE= false; //Poner en true para ver los logs\n\n//Regresa la fila con el indice idx, en un solo array\nfunction sacarFila(arr, idx){\n\tconst ret = []\n\tfor(const fil in arr){\n\t\tret.push(arr[fil][idx])\n\t}\n\treturn ret\n}\n\n\n//Calcula el numero de fichas dentro de una fila/columna \n//que acuerdan con el subconjunto de la ficha que se coloco. \nfunction lensubconjunto(arr, ficha){\n\tvar subconjunto = fs.clonar(ficha)\n\tvar subconjuntolen = 0 \n\tfor(var i = 0; i < arr.length; i++){\n\t\tvar fichaComp = fichas[arr[i]]\n\t\tif(fichaComp){\n\t\t\tif(subconjunto.includes(fichaComp[\"color\"])){\n\t\t\t\tsubconjuntolen += 1\n\t\t\t\tif(!subconjunto.includes(fichaComp[\"patron\"])){\n\t\t\t\t\tsubconjunto = [fichaComp[\"color\"]]\n\t\t\t\t}\n\t\t\t} else if(subconjunto.includes(fichaComp[\"patron\"])) {\n\t\t\t\tsubconjuntolen += 1\n\t\t\t\tsubconjunto = [fichaComp[\"patron\"]]\n\t\t\t} else {\n\t\t\t\t//En cuanto nos topemos con una ficha que no acuerda, dejamos de contar \n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\treturn [subconjuntolen, subconjunto]\n\t\t}\n\t}\n\treturn [subconjuntolen, subconjunto]\n}\n\n\n//Calcula cuales subconjuntos verticales existen segun las \n//fichas que fueron bajadas (aquellas que se encuentran en\n// las \"posiciones\"). \nfunction subconjuntosVerticales(tablero, posiciones){\n\t//Dentro de cada fila en \"subconjuntos\" se colocara un tuple que representa\n\t//El indice de inicio y el indice final del subconjunto. \n\tvar subconjuntos = [[], [], [], [], []]\n\tfor(const idx in posiciones){\n\t\tvar pos = posiciones[idx]\n\t\t// todas las fichas que se han colocado en esta columna, incluyendo la que se acaba de bajar\n\t\tvar tab = tablero[pos[0]].slice(0, pos[1])\n\t\tconst ficha = fichas[tablero[pos[0]][pos[1]]]\n\t\t// Se pone al reves para que empezemos a contar desde la ficha que se acaba de bajar\n\t\ttab.reverse()\n\t\tconst subconjunto = lensubconjunto(tab, [ficha[\"color\"], ficha[\"patron\"]])[0]\n\t\tif(subconjunto){\n\t\t\tsubconjuntos[pos[0]] = [pos[1] - subconjunto, pos[1]]\n\t\t}\n\t}\n\treturn subconjuntos\n}\n\n\n//Calcula cuales subconjuntos horizontales existen segun las \n//fichas que fueron bajadas (aquellas que se encuentran en\n// las \"posiciones\"). \nfunction subconjuntosHorizontales(tablero, posiciones){\n\t// Dentro de cada fila en \"subconjuntos\" se colocaran varios tuples, cada uno \n\t// consiste en la posicion de inicio y la posicion final de cada subconjunto en esa fila\n\t// que incluya una ficha que se acaba de bajar. Por ejemplo, \n\t// si la segunda fila del tablero contiene fichas asi: \n\t// Rojo, rojo, azul, azul, azul \n\t// subconjuntos[1] = [[0, 1], [2, 4]]\n\tvar subconjuntos = [[], [], [], [], []]\n\tfor(const idx in posiciones){\n\t\tvar pos = posiciones[idx] \n\t\tconst fila = sacarFila(tablero, pos[1])\n\t\tvar visitado = false\n\t\tfor(const sc in subconjuntos[pos[1]]){\n\t\t\tif(subconjuntos[pos[1]][sc][0] <= pos[0]\n\t\t\t\t&& subconjuntos[pos[1]][sc][1] >= pos[0]){\n\t\t\t\t// Si la ficha en esta posicion forma parte de \n\t\t\t\t// un subconjunto que ya calculamos, no hay porque\n\t\t\t\t// volver a calcularlo \n\t\t\t\tvisitado = true\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tconst ficha = fichas[tablero[pos[0]][pos[1]]]\n\t\tvar lenSubconjIzq = [0, []]\n\t\tif(!visitado){\n\t\t\t//Calculamos cuantas fichas a la izquierda acuerdan con la ficha que se acaba de bajar\n\t\t\tconst tableroIzq = fila.slice(0, pos[0])\n\t\t\ttableroIzq.reverse()\n\t\t\tlenSubconjIzq = lensubconjunto(tableroIzq, [ficha[\"color\"], ficha[\"patron\"]])\n\t\t\tif(lenSubconjIzq[0]){\n\t\t\t\tsubconjuntos[pos[1]].push([pos[0] - lenSubconjIzq[0], pos[0]])\n\t\t\t}\n\t\t} \n\t\t\t//Calculamos cuantas fichas a la derecha acuerdan con la ficha que se acaba de bajar\n\t\t\tvar derecho = []\n\t\t\tconst tableroDer = fila.slice(pos[0]+1, fila.length)\n\t\t\tif(pos[0] !== tablero[0].length - 1){ //Si no es la ultima ficha en la fila\n\t\t\t\tvar adjacent = fichas[tablero[pos[0]+1][pos[1]]]\n\t\t\t\tif (adjacent){\n\t\t\t\t\tif(lenSubconjIzq[1].includes(adjacent[\"color\"]) || lenSubconjIzq[1].includes(adjacent[\"patron\"])) {\n\t\t\t\t\t\t//En este caso, las fichas del lado izquierdo y del lado derecho de la ficha que se acaba de\n\t\t\t\t\t\t//colocar forman parte del mismo subconjunto \n\t\t\t\t\t\tderecho = lenSubconjIzq[1]\n\t\t\t\t\t\tvar subconjuntoDer = lensubconjunto(tableroDer, derecho)[0]\n\t\t\t\t\t\tif(subconjuntoDer){\n\t\t\t\t\t\t\tif(subconjuntos[pos[1]].length > 0 ){\n\t\t\t\t\t\t\t\tsubconjuntos[pos[1]][subconjuntos[pos[1]].length - 1][1] += subconjuntoDer\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsubconjuntos[pos[1]].push([pos[0], pos[0] + subconjuntoDer])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//En este caso, las fichas del lado izquierdo y del lado derecho de la ficha que se acaba de\n\t\t\t\t\t\t//colocar no forman parte del mismo subconjunto \n\t\t\t\t\t\tderecho = [ficha[\"color\"], ficha[\"patron\"]]\n\t\t\t\t\t\tif(derecho.includes(adjacent[\"color\"]) || derecho.includes(adjacent[\"patron\"])) {\n\t\t\t\t\t\t\tsubconjuntoDer = lensubconjunto(tableroDer, derecho)[0]\n\t\t\t\t\t\t\tif(subconjuntoDer){\n\t\t\t\t\t\t\t\tsubconjuntos[pos[1]].push([pos[0], pos[0] + lensubconjunto(tableroDer, derecho)[0]])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t}\n\treturn subconjuntos\n}\n\n\n\n//Funcion para bajar filas al finar de una ronda\nfunction bajarFichas(tablero, posiciones){\n\tvar newTablero = fs.clonar(tablero)\n\tfor(const pos in posiciones){\n\t\tfor(const col in newTablero[pos]){\n\t\t\tif(newTablero[pos][col] === null){\n\t\t\t\tnewTablero[pos][col] = posiciones[pos]\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\treturn newTablero\n}\n\n\n\n//Calcula los puntos si se bajan las fichas segun los indices en \"posiciones\"\nfunction calcularPuntos(jugador, posiciones, basura){\n\tvar subconjuntos = [[], []]\n\tvar puntuacionV = 0\n\tvar puntuacionH = 0\n\tsubconjuntos[0] = subconjuntosVerticales(jugador[\"tablero\"], posiciones)\n\tfor(var sc in subconjuntos[0]){\n\t\tif(subconjuntos[0][sc].length){\n\t\t\tpuntuacionV += 1 + subconjuntos[0][sc][1] - subconjuntos[0][sc][0]\n\t\t}\n\t}\n\tsubconjuntos[1] = subconjuntosHorizontales(jugador[\"tablero\"], posiciones)\n\tfor(var sco in subconjuntos[1]){\n\t\tfor(var ssc in subconjuntos[1][sco]){\n\t\t\tif(subconjuntos[1][sco][ssc].length){\n\t\t\t\tpuntuacionH += 1 + subconjuntos[1][sco][ssc][1] - subconjuntos[1][sco][ssc][0]\n\t\t\t}\n\t\t}\n\t}\n\n\treturn [puntuacionH+puntuacionV-basura, subconjuntos]\n}\n\n\n\n//Esta mega-funcion basicamente solo baja las fichas, calcula segun cuales \n//fueron bajadas cuales subconjuntos se crearon, y saca la puntuacion de \n//la jugada \nfunction bajarFichasYSacarPuntuacion(salaActual, state, socket = \"\"){\n\tif(VERBOSE){\n\t\tconsole.log(\"Bajando las fichas en la sala. Usuarios en la sala:\")\n\t\tfor(const u in salaActual[\"usuarios\"]){\n\t\t\tconsole.log(`${u}`)\n\t\t\tconsole.log(`COLUMNAS: ${salaActual[\"usuarios\"][u][\"canasta\"]}`)\n\t\t\tconsole.log(`CANASTA: ${salaActual[\"usuarios\"][u][\"canasta\"]}`)\n\t\t}\n\t}\n\t//\"primerTurno\" es una variable que usaba cuando existia la posibilidad de un juego multiplayer, \n\t//se puede ignorar.\n\tif(!salaActual[\"primerTurno\"] || salaActual[\"local\"]){ //como primerTurno solo es para prevenir requests multiples, siempre es falso en salas locales\n  \t\t\tsalaActual[\"primerTurno\"] = false;\n\n  \t\t\t//Manejo de cada usuario en la sala \n\t  \t\tfor(const u in salaActual[\"usuarios\"]){\n\t  \t\t\tvar usuarioActual = salaActual[\"usuarios\"][u]\n\t  \t\t\t//Si es el turno de este usuario, se tiene que manualmente actualizar su estado\n\t  \t\t\tif(usuarioActual[\"usuario\"] === socket.id || (usuarioActual[\"usuario\"] === salaActual[\"turno\"] && salaActual[\"local\"])){\n\t\t\t  \t\tusuarioActual[\"canasta\"] = []\n\t\t\t  \t\tusuarioActual[\"columnas\"] = state[\"cols\"]\n\t\t\t  \t\tusuarioActual[\"basura\"] = state[\"basura\"]\n\t  \t\t\t}\n\n\t  \t\t\tvar fichasBajadas = []\n\t  \t\t\tvar nuevoTablero = fs.clonar(usuarioActual[\"tablero\"])\n\t  \t\t\t//Bajamos las fichas\n\t  \t\t\tfor(const c in usuarioActual[\"columnas\"]){\n\t  \t\t\t\tvar colActual = usuarioActual[\"columnas\"][c]\n\t  \t\t\t\tif(colActual[colActual.length - 1] != null){ //si esta llena la columna\n\t  \t\t\t\t\tusuarioActual[\"columnas\"][c] = Array(colActual.length).fill(null) // Se borra la columna \n\t  \t\t\t\t\tif(colActual.length > 1){ //Se regresan las fichas de mas\n\t\t\t  \t\t\t\tsalaActual[\"fichasCentro\"] = salaActual[\"fichasCentro\"].concat(colActual.slice(1))\n\t\t\t  \t\t\t}\n\t\t  \t\t\t\tfor(const f in nuevoTablero[c]){ // Se bajan las fichas \n\t\t  \t\t\t\t\tif(nuevoTablero[c][f] === null){\n\t\t\t\t\t\t\t\t\tnuevoTablero[c][f] = colActual[0]\n\t\t\t\t\t\t\t\t\tfichasBajadas.push([parseInt(c), parseInt(f)])\n\t\t\t\t\t\t\t\t\tif(f == nuevoTablero[c].length-1){\n\t\t  \t\t\t\t\t\t\t\tsalaActual[\"status\"] = \"final\" // Es el final del juego\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t  \t\t\t\t}\n\t\t  \t\t\t} \n\t  \t\t\t}\n\t  \t\t\t//Sacamos la puntuacion \n\t  \t\t\tusuarioActual[\"tablero\"] = nuevoTablero\n\t  \t\t\tconst puntos = calcularPuntos(usuarioActual, fichasBajadas, usuarioActual[\"basura\"].length)\n\t  \t\t\tusuarioActual[\"puntuacion\"][0] += puntos[0]\n\t  \t\t\tusuarioActual[\"puntuacion\"][1] = puntos[1]\n\t  \t\t\tsalaActual[\"fichasCentro\"] = salaActual[\"fichasCentro\"].concat(usuarioActual[\"basura\"])\n\t  \t\t\tusuarioActual[\"basura\"] = []\n\t  \t\t}\n\n\t  \t\t//Vamos a la siguiente ronda, si es que no es el final del juego\n\t\t  \t\tsalaActual[\"ronda\"] += 1\n\t\t  \t\tvar primerJugador = salaActual[\"ronda\"]%salaActual[\"usuarios\"].length\n\t\t\t  \tsalaActual[\"turno\"] = salaActual[\"usuarios\"][primerJugador][\"usuario\"]\n\t\t\t  \t//Distribuimos las fichas \n\t\t\t  \tif(salaActual[\"status\"] !== \"final\"){\n\t\t\t  \t\tif(VERBOSE){\n\t\t\t  \t\t\tconsole.log(\"Distribuyendo fichas. Canastas antes de distribuir:\")\n\t\t\t  \t\t\tfor(const u in salaActual[\"usuarios\"]){\n\t\t\t\t\t\t\tconsole.log(`${salaActual[\"usuarios\"][u][\"canasta\"]}`)\n\t\t\t\t\t\t}\n\t\t\t  \t\t}\n\t\t\t  \t\tfs.distribuirFichas(salaActual, primerJugador)\n\t\t\t  \t\tif(VERBOSE){\n\t\t\t  \t\t\tconsole.log(\"Se distrubyeron las fichas. Canastas despues de distribuir:\")\n\t\t\t  \t\t\tfor(const u in salaActual[\"usuarios\"]){\n\t\t\t\t\t\t\tconsole.log(`${salaActual[\"usuarios\"][u][\"canasta\"]}`)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log(\"Fichas al centro al final de la ronda:\")\n\t\t\t\t\t\tconsole.log(`${salaActual[\"fichasCentro\"]}`)\n\t\t\t  \t\t}\n\t\t\t  \t}\n\t  \t\treturn salaActual\n\t  \t} else {\n\t  \t\tconsole.log(`ERROR: Ya empezo la siguiente ronda en la sala ${salaActual[\"sala\"]}`)\n\t  \t}\n}\n\nmodule.exports = {calcularPuntos, bajarFichas, bajarFichasYSacarPuntuacion};","/home/csgarciamartinez/Telar/telar-client/src/Tutorial.js",[],[],{"ruleId":"91","severity":1,"message":"92","line":24,"column":9,"nodeType":"93","messageId":"94","endLine":24,"endColumn":14},{"ruleId":"91","severity":1,"message":"95","line":25,"column":9,"nodeType":"93","messageId":"94","endLine":25,"endColumn":14},{"ruleId":"96","severity":1,"message":"97","line":126,"column":11,"nodeType":"98","endLine":126,"endColumn":83},{"ruleId":"96","severity":1,"message":"97","line":127,"column":19,"nodeType":"98","endLine":127,"endColumn":91},{"ruleId":"96","severity":1,"message":"97","line":128,"column":11,"nodeType":"98","endLine":128,"endColumn":83},{"ruleId":"96","severity":1,"message":"97","line":141,"column":11,"nodeType":"98","endLine":141,"endColumn":85},{"ruleId":"96","severity":1,"message":"97","line":142,"column":11,"nodeType":"98","endLine":142,"endColumn":85},{"ruleId":"96","severity":1,"message":"97","line":143,"column":11,"nodeType":"98","endLine":143,"endColumn":85},{"ruleId":"96","severity":1,"message":"97","line":155,"column":21,"nodeType":"98","endLine":155,"endColumn":96},{"ruleId":"96","severity":1,"message":"97","line":156,"column":11,"nodeType":"98","endLine":156,"endColumn":86},{"ruleId":"96","severity":1,"message":"97","line":168,"column":11,"nodeType":"98","endLine":168,"endColumn":83},{"ruleId":"96","severity":1,"message":"97","line":169,"column":11,"nodeType":"98","endLine":169,"endColumn":83},{"ruleId":"96","severity":1,"message":"97","line":180,"column":11,"nodeType":"98","endLine":180,"endColumn":83},{"ruleId":"96","severity":1,"message":"97","line":181,"column":11,"nodeType":"98","endLine":181,"endColumn":83},{"ruleId":"96","severity":1,"message":"97","line":182,"column":11,"nodeType":"98","endLine":182,"endColumn":83},{"ruleId":"99","severity":1,"message":"100","line":312,"column":24,"nodeType":"101","messageId":"102","endLine":312,"endColumn":26},{"ruleId":"91","severity":1,"message":"103","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":71,"column":3,"nodeType":"106","messageId":"107","endLine":73,"endColumn":4},{"ruleId":"108","severity":1,"message":"109","line":110,"column":18,"nodeType":"110","messageId":"111","endLine":110,"endColumn":25},{"ruleId":"91","severity":1,"message":"112","line":135,"column":8,"nodeType":"93","messageId":"94","endLine":135,"endColumn":12},{"ruleId":"113","severity":1,"message":"114","line":233,"column":1,"nodeType":"115","endLine":239,"endColumn":3},{"ruleId":"99","severity":1,"message":"100","line":223,"column":15,"nodeType":"101","messageId":"102","endLine":223,"endColumn":17},"no-unused-vars","'turno' is assigned a value but never used.","Identifier","unusedVar","'ronda' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ItemTypes' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","'menu' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration"]