{"ast":null,"code":"var _jsxFileName = \"/home/csgarciamartinez/Telar/telar-client/src/Sala.js\";\nimport { io } from 'socket.io-client';\nimport Jugador from './Jugador';\nimport ItemTypes from './ItemTypes';\nimport React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './sala.css';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fs = require('./server/funcionesServidor.js');\n\nconst puntuacion = require('./server/puntuacion.js'); //TODO: Fix everything related to \"espera\", incl the fact you can play during it\n\n\nconst Sala = _ref => {\n  let {\n    sala,\n    socket,\n    setSala,\n    setTurno,\n    setRonda\n  } = _ref;\n  var jugadores = [];\n  const client = socket;\n  var espera = \"\";\n  var usr_id = 0; //La posicion del jugador en la sala\n  //FUNCIONES PARA MULTIPLAYER LOCAL. EN TAL CASO SALA.JS TIENE LAS FUNCIONES DEL SERVIDOR. \n\n  const comenzar = () => {\n    if (!sala[\"local\"]) {\n      console.log(`Se mando un request para comenzar el juego`);\n      socket.current.emit('comenzar-juego', sala[\"sala\"]);\n    } else {\n      console.log(\"Se comenzo el juego\");\n      sala = fs.comenzarJuego(sala);\n      console.log(\"Sala tras comenzar el juego:\");\n      console.log(sala);\n      setSala(sala);\n      setTurno(0);\n      setRonda(0);\n    }\n  };\n\n  const hacerJugada = state => {\n    if (!sala[\"local\"]) {\n      socket.current.emit('jugada', sala[\"sala\"], state);\n    } else {\n      sala[\"usuarios\"][sala[\"turno\"]][\"columnas\"] = state[\"cols\"];\n      sala[\"usuarios\"][sala[\"turno\"]][\"basura\"] = state[\"basura\"];\n      sala[\"usuarios\"][sala[\"turno\"]][\"canasta\"] = [];\n      var siguiente = sala[\"turno\"] + 1; //El siguiente jugador\n\n      if (sala[\"turno\"] == sala[\"usuarios\"].length - 1) {\n        siguiente = 0;\n      }\n\n      for (const f in state[\"fichasEnCanasta\"]) {\n        sala[\"usuarios\"][siguiente][\"canasta\"].push(state[\"fichasEnCanasta\"][f]);\n      }\n\n      sala[\"turno\"] = sala[\"usuarios\"][siguiente][\"usuario\"];\n      sala[\"sala\"] = sala[\"turno\"];\n      console.log(\"Se hizo una jugada. Sala tras la jugada: \");\n      console.log(sala);\n      setSala(sala);\n      setTurno(sala[\"turno\"]);\n    }\n  };\n\n  const acabarRonda = state => {\n    if (!sala[\"local\"]) {\n      socket.current.emit('ronda', sala[\"sala\"], state);\n    } else {\n      var newSala = JSON.parse(JSON.stringify(puntuacion.bajarFichasYSacarPuntuacion(sala, state))); //deep copy \n\n      console.log(\"Se acabo la ronda. Sala tras el final de la ronda: \");\n      console.log(newSala);\n      setSala(newSala);\n      setTurno(newSala[\"turno\"]);\n      setRonda(newSala[\"ronda\"]);\n      sala = newSala;\n    }\n  }; //Si es el final del juego, se encuentra el ganador\n\n\n  if (sala[\"status\"] == \"final\") {\n    var puntuacion_maxima = -1; //Sacar la puntuacion maxima\n\n    for (const usr in sala[\"usuarios\"]) {\n      if (sala[\"usuarios\"][usr][\"puntuacion\"][0] > puntuacion_maxima) {\n        puntuacion_maxima = sala[\"usuarios\"][usr][\"puntuacion\"][0];\n      }\n    }\n\n    for (const usr in sala[\"usuarios\"]) {\n      if (puntuacion_maxima == sala[\"usuarios\"][usr][\"puntuacion\"][0]) {\n        jugadores.push( /*#__PURE__*/_jsxDEV(Jugador, {\n          jugador: usr,\n          status: \"final\",\n          ganador: true,\n          sala: sala,\n          socket: client\n        }, sala[\"usuarios\"][usr][\"usuario\"], false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 24\n        }, this));\n      } else {\n        jugadores.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Jugador, {\n            jugador: usr,\n            status: \"final\",\n            sala: sala,\n            ganador: false,\n            socket: client\n          }, sala[\"usuarios\"][usr][\"usuario\"], false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 24\n        }, this));\n      }\n    }\n  } //CREAR LOS JUGADORES\n  else if (sala[\"status\"] == \"activo\") {\n    for (const usr in sala[\"usuarios\"]) {\n      if (sala[\"usuarios\"][usr][\"usuario\"] == client.current.id || sala[\"local\"] && sala[\"turno\"] == usr) {\n        jugadores.push( /*#__PURE__*/_jsxDEV(Jugador, {\n          jugador: usr,\n          status: \"activo\",\n          sala: sala,\n          socket: client,\n          hacerJugada: hacerJugada,\n          acabarRonda: acabarRonda\n        }, sala[\"usuarios\"][usr][\"usuario\"], false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 24\n        }, this));\n      } else {\n        jugadores.push( /*#__PURE__*/_jsxDEV(Jugador, {\n          jugador: usr,\n          status: \"inactivo\",\n          sala: sala,\n          socket: client\n        }, sala[\"usuarios\"][usr][\"usuario\"], false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 24\n        }, this));\n      }\n    }\n  } else {\n    for (const usr in sala[\"usuarios\"]) {\n      jugadores.push( /*#__PURE__*/_jsxDEV(Jugador, {\n        jugador: usr,\n        sala: sala\n      }, sala[\"usuarios\"][usr][\"usuario\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 22\n      }, this));\n    }\n  }\n\n  if (sala[\"espera\"]) {\n    espera = \"espera\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!sala[\"local\"] ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Sala de juego \\\"\", sala[\"sala\"], \"\\\"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n        id: espera,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"sala\",\n        children: sala[\"status\"] == \"activo\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"jugadores\",\n          children: jugadores\n        }, \"boards1\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"jugadores\",\n            children: jugadores\n          }, \"boards2\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"comenzarBtn\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: comenzar,\n              children: \"Comenzar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Sala;\nexport default Sala;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sala\");","map":{"version":3,"names":["io","Jugador","ItemTypes","React","useEffect","useState","useRef","ReactDOM","DndProvider","useDrag","useDrop","HTML5Backend","fs","require","puntuacion","Sala","sala","socket","setSala","setTurno","setRonda","jugadores","client","espera","usr_id","comenzar","console","log","current","emit","comenzarJuego","hacerJugada","state","siguiente","length","f","push","acabarRonda","newSala","JSON","parse","stringify","bajarFichasYSacarPuntuacion","puntuacion_maxima","usr","id"],"sources":["/home/csgarciamartinez/Telar/telar-client/src/Sala.js"],"sourcesContent":["import { io } from 'socket.io-client';\nimport Jugador from './Jugador';\nimport ItemTypes from './ItemTypes'\nimport React from 'react';\nimport { useEffect, useState, useRef } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport'./sala.css';\nimport {DndProvider, useDrag, useDrop} from 'react-dnd'\nimport{HTML5Backend} from 'react-dnd-html5-backend'\n\nconst fs = require('./server/funcionesServidor.js');\nconst puntuacion = require('./server/puntuacion.js');\n\n\n//TODO: Fix everything related to \"espera\", incl the fact you can play during it\nconst Sala = ({sala, socket, setSala, setTurno, setRonda}) => {\n  var jugadores = [];\n\n  const client = socket;\n  var espera = \"\"\n  var usr_id = 0 //La posicion del jugador en la sala\n\n  //FUNCIONES PARA MULTIPLAYER LOCAL. EN TAL CASO SALA.JS TIENE LAS FUNCIONES DEL SERVIDOR. \n  const comenzar = () =>{\n    if(!sala[\"local\"]){\n      console.log(`Se mando un request para comenzar el juego`);\n      socket.current.emit('comenzar-juego', sala[\"sala\"]);\n    } else {\n      console.log(\"Se comenzo el juego\")\n      sala = fs.comenzarJuego(sala)\n      console.log(\"Sala tras comenzar el juego:\")\n      console.log(sala)\n      setSala(sala)\n      setTurno(0)\n      setRonda(0)\n    }\n  }\n\n  const hacerJugada = (state) => {\n    if(!sala[\"local\"]){\n      socket.current.emit('jugada', sala[\"sala\"], state)\n    } else {\n      sala[\"usuarios\"][sala[\"turno\"]][\"columnas\"] = state[\"cols\"]\n      sala[\"usuarios\"][sala[\"turno\"]][\"basura\"] = state[\"basura\"]\n      sala[\"usuarios\"][sala[\"turno\"]][\"canasta\"] = []\n      var siguiente = sala[\"turno\"] + 1 //El siguiente jugador\n      if(sala[\"turno\"] == sala[\"usuarios\"].length-1){\n        siguiente = 0\n      }\n      for(const f in state[\"fichasEnCanasta\"]){\n        sala[\"usuarios\"][siguiente][\"canasta\"].push(state[\"fichasEnCanasta\"][f])\n      }\n      sala[\"turno\"] = sala[\"usuarios\"][siguiente][\"usuario\"] \n      sala[\"sala\"] = sala[\"turno\"];\n      console.log(\"Se hizo una jugada. Sala tras la jugada: \")\n      console.log(sala)\n      setSala(sala)\n      setTurno(sala[\"turno\"])\n    }\n  }\n\n  const acabarRonda = (state) => {\n    if(!sala[\"local\"]){\n      socket.current.emit('ronda', sala[\"sala\"], state)\n    } else {\n      \n      var newSala = JSON.parse(JSON.stringify(puntuacion.bajarFichasYSacarPuntuacion(sala, state))) //deep copy \n      console.log(\"Se acabo la ronda. Sala tras el final de la ronda: \")\n      console.log(newSala)\n      setSala(newSala);\n      setTurno(newSala[\"turno\"])\n      setRonda(newSala[\"ronda\"])\n      sala = newSala\n    }\n  }\n\n  //Si es el final del juego, se encuentra el ganador\n  if(sala[\"status\"] == \"final\"){\n    var puntuacion_maxima = -1\n    //Sacar la puntuacion maxima\n    for(const usr in sala[\"usuarios\"]){\n      if(sala[\"usuarios\"][usr][\"puntuacion\"][0] > puntuacion_maxima){\n        puntuacion_maxima = sala[\"usuarios\"][usr][\"puntuacion\"][0]\n      }\n    }\n    for(const usr in sala[\"usuarios\"]){\n      if(puntuacion_maxima == sala[\"usuarios\"][usr][\"puntuacion\"][0]){\n        jugadores.push(<Jugador jugador = {usr}\n                              status = \"final\"\n                              ganador = {true}\n                              sala = {sala}\n                              socket = {client}\n                              key = {sala[\"usuarios\"][usr][\"usuario\"]}/>)\n      } else {\n        jugadores.push(<div><Jugador jugador = {usr}\n                              status = \"final\"\n                              sala = {sala}\n                              ganador = {false}\n                              socket = {client}\n                              key = {sala[\"usuarios\"][usr][\"usuario\"]}/></div>)\n      }\n    }\n  }\n\n  //CREAR LOS JUGADORES\n  else if(sala[\"status\"] == \"activo\"){\n    for(const usr in sala[\"usuarios\"]){\n      if(sala[\"usuarios\"][usr][\"usuario\"] == client.current.id || (sala[\"local\"] && sala[\"turno\"] == usr)){\n        jugadores.push(<Jugador jugador = {usr}\n                              status = \"activo\"\n                              sala = {sala}\n                              socket = {client}\n                              hacerJugada = {hacerJugada}\n                              acabarRonda = {acabarRonda}\n                              key = {sala[\"usuarios\"][usr][\"usuario\"]}/>)\n      } else {\n        jugadores.push(<Jugador jugador = {usr}\n                              status = \"inactivo\"\n                              sala = {sala}\n                              socket = {client}\n                              key = {sala[\"usuarios\"][usr][\"usuario\"]}/>)\n      }\n    }\n  } else {\n    for(const usr in sala[\"usuarios\"]){\n      jugadores.push(<Jugador jugador = {usr}\n                              sala = {sala} \n                              key={sala[\"usuarios\"][usr][\"usuario\"]}/>);\n    }\n  }\n  if(sala[\"espera\"]){\n    espera = \"espera\"\n  }\n\n  return(\n    <DndProvider backend={HTML5Backend}>\n    <div> \n      {!sala[\"local\"] ? <h1>Sala de juego \"{sala[\"sala\"]}\"</h1>  : \"\"}      \n      <div id = {espera}> </div>\n      <div class =\"sala\">\n        {sala[\"status\"] == \"activo\"\n          ? \n            <div class=\"jugadores\" key=\"boards1\">{jugadores}</div>\n            :\n            <div>\n            <div class=\"jugadores\" key=\"boards2\"> \n            {jugadores}\n            </div>\n            <div id=\"comenzarBtn\">\n              <button onClick={comenzar}>\n                Comenzar\n              </button>\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n    </DndProvider>\n  )\n}\n\nexport default Sala;"],"mappings":"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"},"metadata":{},"sourceType":"module"}