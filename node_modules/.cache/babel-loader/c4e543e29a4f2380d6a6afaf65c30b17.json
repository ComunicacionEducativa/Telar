{"ast":null,"code":"var _jsxFileName = \"/home/csgarciamartinez/Telar/telar-client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client'; //Connect to server info \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nsocket.on('connect', () => console.log(`Client connected: ${socket.id}`));\nsocket.on('disconnect', reason => console.log(`Client disconnected: ${reason}`));\nsocket.on('connect_error', reason => console.log(`Client connect_error: ${reason}`));\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"room-creation-form\",\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-room-name\",\n          autocomplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => client.current.emit('requestDate', 'need date'),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction App() {\n  _s();\n\n  const [serverDate, setServerDate] = useState('');\n  const client = useRef();\n  socket.on('responseDate', msg => setServerDate(msg));\n  useEffect(() => {\n    client.current = socket;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), \"Click to request date from server\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Server response: \", serverDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"R4KHkZ7w+U/FMKpFDXweeVSKxoU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","io","React","ReactDOM","socket","on","console","log","id","reason","Game","Component","constructor","props","state","room","render","client","current","emit","App","serverDate","setServerDate","msg"],"sources":["/home/csgarciamartinez/Telar/telar-client/src/App.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n\n\n//Connect to server info \nconst socket = io('http://localhost:5000');\n\nsocket.on('connect', () => console.log(`Client connected: ${socket.id}`));\n\nsocket.on('disconnect', (reason) =>\n  console.log(`Client disconnected: ${reason}`)\n);\n\nsocket.on('connect_error', (reason) =>\n  console.log(`Client connect_error: ${reason}`)\n);\n\n\n\nclass Game extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      room: null,\n    };\n  }\n\n  render(){\n    return(\n      <div>\n        <form id=\"room-creation-form\" action=\"\">\n          <input id=\"new-room-name\" autocomplete=\"off\" />\n          <button onClick={() => client.current.emit('requestDate', 'need date')}>\n            Send\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n\nfunction App() {\n  const [serverDate, setServerDate] = useState('');\n  const client = useRef();\n\n  socket.on('responseDate', (msg) => setServerDate(msg));\n\n  useEffect(() => {\n    client.current = socket;\n  }, []);\n\n  return (\n    <>\n      <Game />\n      \n        Click to request date from server\n      <div>Server response: {serverDate}</div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,SAASC,EAAT,QAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB,C,CAGA;;;;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAD,CAAjB;AAEAG,MAAM,CAACC,EAAP,CAAU,SAAV,EAAqB,MAAMC,OAAO,CAACC,GAAR,CAAa,qBAAoBH,MAAM,CAACI,EAAG,EAA3C,CAA3B;AAEAJ,MAAM,CAACC,EAAP,CAAU,YAAV,EAAyBI,MAAD,IACtBH,OAAO,CAACC,GAAR,CAAa,wBAAuBE,MAAO,EAA3C,CADF;AAIAL,MAAM,CAACC,EAAP,CAAU,eAAV,EAA4BI,MAAD,IACzBH,OAAO,CAACC,GAAR,CAAa,yBAAwBE,MAAO,EAA5C,CADF;;AAMA,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAkC;EAChCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,IAAI,EAAE;IADK,CAAb;EAGD;;EAEDC,MAAM,GAAE;IACN,oBACE;MAAA,uBACE;QAAM,EAAE,EAAC,oBAAT;QAA8B,MAAM,EAAC,EAArC;QAAA,wBACE;UAAO,EAAE,EAAC,eAAV;UAA0B,YAAY,EAAC;QAAvC;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,OAAO,EAAE,MAAMC,MAAM,CAACC,OAAP,CAAeC,IAAf,CAAoB,aAApB,EAAmC,WAAnC,CAAvB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAUD;;AAnB+B;;AAsBlC,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BvB,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAMkB,MAAM,GAAGjB,MAAM,EAArB;EAEAI,MAAM,CAACC,EAAP,CAAU,cAAV,EAA2BkB,GAAD,IAASD,aAAa,CAACC,GAAD,CAAhD;EAEAzB,SAAS,CAAC,MAAM;IACdmB,MAAM,CAACC,OAAP,GAAiBd,MAAjB;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAA,wBACE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QADF,oDAIE;MAAA,gCAAuBiB,UAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA,gBADF;AAQD;;GAlBQD,G;;KAAAA,G;AAoBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}