{"ast":null,"code":"const fs = require('./funcionesServidor.js');\n\nconst fichas = fs.crearFichas();\nvar VERBOSE = true; //Funciones para la puntuacion del juego\n\nfunction sacarFila(arr, idx) {\n  const ret = [];\n\n  for (const fil in arr) {\n    ret.push(arr[fil][idx]);\n  }\n\n  return ret;\n}\n\nfunction lensubconjunto(arr, ficha) {\n  var subconjunto = fs.clonar(ficha);\n  console.log(subconjunto);\n  console.log(arr);\n  var subconjuntolen = 0;\n\n  for (var i = 0; i < arr.length; i++) {\n    var fichaComp = fichas[arr[i]];\n\n    if (fichaComp) {\n      if (subconjunto.includes(fichaComp[\"color\"])) {\n        subconjuntolen += 1;\n\n        if (!subconjunto.includes(fichaComp[\"patron\"])) {\n          subconjunto = [fichaComp[\"color\"]];\n        }\n      } else if (subconjunto.includes(fichaComp[\"patron\"])) {\n        subconjuntolen += 1;\n        subconjunto = [fichaComp[\"patron\"]];\n      } else {\n        break;\n      }\n    } else {\n      return [subconjuntolen, subconjunto];\n    }\n  }\n\n  return [subconjuntolen, subconjunto];\n}\n\nfunction subconjuntosVerticales(tablero, posiciones) {\n  var subconjuntos = [[], [], [], [], []];\n\n  for (const idx in posiciones) {\n    var pos = posiciones[idx];\n    var tab = tablero[pos[0]].slice(0, pos[1]);\n    const ficha = fichas[tablero[pos[0]][pos[1]]];\n    console.log(tablero);\n    console.log(pos);\n    console.log(ficha);\n    tab.reverse();\n    const subconjunto = lensubconjunto(tab, [ficha[\"color\"], ficha[\"patron\"]])[0];\n\n    if (subconjunto) {\n      subconjuntos[pos[0]] = [pos[1] - subconjunto, pos[1]];\n    }\n  }\n\n  return subconjuntos;\n} //TODO: CAREFULLY EXAMINE + REFACTOR THIS SPAGHETTI CODE\n\n\nfunction subconjuntosHorizontales(tablero, posiciones) {\n  var subconjuntos = [[], [], [], [], []];\n\n  for (const idx in posiciones) {\n    var pos = posiciones[idx];\n    console.log(`Buscando subconjuntos para ficha ${pos}`);\n    const fila = sacarFila(tablero, pos[1]);\n    console.log(fila);\n    var visitado = false;\n\n    for (const sc in subconjuntos[pos[1]]) {\n      if (subconjuntos[pos[1]][sc][0] <= pos[0] && subconjuntos[pos[1]][sc][1] >= pos[0]) {\n        visitado = true;\n        break;\n      }\n    }\n\n    if (!visitado) {\n      console.log(`139: ${subconjuntos[idx]}`);\n      const ficha = fichas[tablero[pos[0]][pos[1]]];\n      console.log(\"FILA: \");\n      console.log(fila);\n      const tableroIzq = fila.slice(0, pos[0]);\n      console.log(\"TABLERO IZQ: \");\n      console.log(tableroIzq);\n      tableroIzq.reverse();\n      var lenSubconjIzq = lensubconjunto(tableroIzq, [ficha[\"color\"], ficha[\"patron\"]]);\n      console.log(lenSubconjIzq);\n\n      if (lenSubconjIzq[0]) {\n        console.log(`183: ${subconjuntos}`);\n        console.log(`184: ${subconjuntos[pos[1]]}`);\n        subconjuntos[pos[1]].push([pos[0] - lenSubconjIzq[0], pos[0]]);\n        console.log(`186: ${subconjuntos[pos[1]]}`);\n      } // Lado derecho\n\n\n      var derecho = [];\n      const tableroDer = fila.slice(pos[0] + 1, fila.length);\n\n      if (pos[0] != tablero[0].length - 1) {\n        console.log(`FICHA ASJACENTE: ${pos[0] + 1}`);\n        var adjacent = fichas[tablero[pos[0] + 1][pos[1]]];\n\n        if (adjacent) {\n          console.log(adjacent);\n\n          if (lenSubconjIzq[1].includes(adjacent[\"color\"]) || lenSubconjIzq[1].includes(adjacent[\"patron\"])) {\n            console.log(\"Trying to add adjacent ficha ... \");\n            derecho = lenSubconjIzq[1];\n            console.log(\"Se encontro el siguiento sc:\");\n            var subconjuntoDer = lensubconjunto(tableroDer, derecho)[0];\n            console.log(subconjuntoDer);\n\n            if (subconjuntoDer) {\n              if (subconjuntos[pos[1]].length > 0) {\n                subconjuntos[pos[1]][subconjuntos[pos[1]].length - 1][1] += subconjuntoDer;\n              } else {\n                subconjuntos[pos[1]].push([pos[0], pos[0] + subconjuntoDer]);\n              }\n            }\n          } else {\n            var derecho = [ficha[\"color\"], ficha[\"patron\"]];\n\n            if (derecho.includes(adjacent[\"color\"]) || derecho.includes(adjacent[\"patron\"])) {\n              var subconjuntoDer = lensubconjunto(tableroDer, derecho)[0];\n\n              if (subconjuntoDer) {\n                subconjuntos[pos[1]].push([pos[0], pos[0] + lensubconjunto(tableroDer, derecho)[0]]);\n              }\n            }\n          }\n        }\n      }\n\n      console.log(`164: ${subconjuntos[pos[1]]}`);\n    }\n\n    console.log(`166: ${subconjuntos[pos[1]]}`);\n  }\n\n  return subconjuntos;\n} //Funcion para bajar filas al finar de una ronda\n\n\nfunction bajarFichas(tablero, posiciones) {\n  var newTablero = fs.clonar(tablero);\n\n  for (const pos in posiciones) {\n    for (const col in newTablero[pos]) {\n      if (newTablero[pos][col] === null) {\n        newTablero[pos][col] = posiciones[pos];\n        break;\n      }\n    }\n  }\n\n  return newTablero;\n}\n\nfunction calcularPuntos(jugador, posiciones, basura) {\n  console.log(posiciones);\n  var subconjuntos = [[], []];\n  var puntuacionV = 0;\n  var puntuacionH = 0;\n  subconjuntos[0] = subconjuntosVerticales(jugador[\"tablero\"], posiciones);\n  console.log(subconjuntos);\n\n  for (var sc in subconjuntos[0]) {\n    if (subconjuntos[0][sc].length) {\n      puntuacionV += 1 + subconjuntos[0][sc][1] - subconjuntos[0][sc][0];\n    }\n  }\n\n  subconjuntos[1] = subconjuntosHorizontales(jugador[\"tablero\"], posiciones);\n  console.log(\"Sacando subconjuntos horizontales ....\");\n  console.log(subconjuntos);\n\n  for (var sc in subconjuntos[1]) {\n    for (var ssc in subconjuntos[1][sc]) {\n      if (subconjuntos[1][sc][ssc].length) {\n        puntuacionH += 1 + subconjuntos[1][sc][ssc][1] - subconjuntos[1][sc][ssc][0];\n      }\n    }\n  }\n\n  console.log(`Puntuacion vertical: ${puntuacionV}`);\n  console.log(`Puntuacion horizontal: ${puntuacionH}`);\n  console.log(`Cantidad en basura: ${basura}`);\n  console.log(puntuacionH + puntuacionV - basura);\n  return [puntuacionH + puntuacionV - basura, subconjuntos];\n}\n\nfunction bajarFichasYSacarPuntuacion(salaActual, state) {\n  let socket = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n\n  if (!salaActual[\"primerTurno\"] || salaActual[\"local\"]) {\n    //como primerTurno solo es para prevenir requests multiples, siempre es falso en salas locales\n    salaActual[\"primerTurno\"] = false; //Manejo de cada usuario en la sala \n\n    for (const u in salaActual[\"usuarios\"]) {\n      var usuarioActual = salaActual[\"usuarios\"][u];\n\n      if (usuarioActual[\"usuario\"] == socket.id) {\n        usuarioActual[\"canasta\"] = [];\n        usuarioActual[\"columnas\"] = state[\"cols\"];\n        usuarioActual[\"basura\"] = state[\"basura\"];\n      } // Bajar fichas y sacar puntuacion\n\n\n      var fichasBajadas = [];\n      var nuevoTablero = fs.clonar(usuarioActual[\"tablero\"]);\n\n      for (const c in usuarioActual[\"columnas\"]) {\n        var colActual = usuarioActual[\"columnas\"][c];\n\n        if (colActual[colActual.length - 1] != null) {\n          //si esta llena la columna\n          console.log(\"BAJANDO UNA FICHA\");\n          usuarioActual[\"columnas\"][c] = Array(colActual.length).fill(null); // Se borra la columna \n\n          if (colActual.length > 1) {\n            //Se regresan las fichas de mas\n            salaActual[\"fichasCentro\"] = salaActual[\"fichasCentro\"].concat(fs.indexesToFichas(colActual.slice(1), salaActual[\"fichas\"]));\n          }\n\n          for (const f in nuevoTablero[c]) {\n            // Se bajan las fichas \n            if (nuevoTablero[c][f] === null) {\n              nuevoTablero[c][f] = colActual[0];\n              fichasBajadas.push([parseInt(c), parseInt(f)]);\n\n              if (f == nuevoTablero[c].length - 1) {\n                salaActual[\"activo\"] = false;\n              }\n\n              break;\n            }\n          }\n        }\n      }\n\n      if (VERBOSE) {\n        console.log(nuevoTablero);\n      }\n\n      usuarioActual[\"tablero\"] = nuevoTablero;\n      const puntos = calcularPuntos(usuarioActual, fichasBajadas, usuarioActual[\"basura\"].length);\n      usuarioActual[\"puntuacion\"][0] += puntos[0];\n      usuarioActual[\"puntuacion\"][1] = puntos[1];\n      salaActual[\"fichasCentro\"] = salaActual[\"fichasCentro\"].concat(fs.indexesToFichas(usuarioActual[\"basura\"], salaActual[\"fichas\"]));\n      usuarioActual[\"basura\"] = [];\n\n      if (VERBOSE) {\n        console.log(`USUARIO ${usuarioActual[\"usuario\"]} TRAS EL FINAL DE LA RONDA: ${usuarioActual}`);\n      }\n    }\n\n    salaActual[\"ronda\"] += 1;\n    var primerJugador = salaActual[\"ronda\"] % salaActual[\"usuarios\"].length;\n    salaActual[\"turno\"] = salaActual[\"usuarios\"][primerJugador][\"usuario\"];\n    fs.distribuirFichas(salaActual, primerJugador);\n    return salaActual;\n  } else {\n    console.log(`ERROR: Ya empezo la siguiente ronda en la sala ${salaActual[\"sala\"]}`);\n  }\n}\n\nmodule.exports = {\n  calcularPuntos,\n  bajarFichas,\n  bajarFichasYSacarPuntuacion\n};","map":{"version":3,"names":["fs","require","fichas","crearFichas","VERBOSE","sacarFila","arr","idx","ret","fil","push","lensubconjunto","ficha","subconjunto","clonar","console","log","subconjuntolen","i","length","fichaComp","includes","subconjuntosVerticales","tablero","posiciones","subconjuntos","pos","tab","slice","reverse","subconjuntosHorizontales","fila","visitado","sc","tableroIzq","lenSubconjIzq","derecho","tableroDer","adjacent","subconjuntoDer","bajarFichas","newTablero","col","calcularPuntos","jugador","basura","puntuacionV","puntuacionH","ssc","bajarFichasYSacarPuntuacion","salaActual","state","socket","u","usuarioActual","id","fichasBajadas","nuevoTablero","c","colActual","Array","fill","concat","indexesToFichas","f","parseInt","puntos","primerJugador","distribuirFichas","module","exports"],"sources":["/home/csgarciamartinez/Telar/telar-client/src/server/puntuacion.js"],"sourcesContent":["const fs = require('./funcionesServidor.js');\n\n\nconst fichas =fs.crearFichas();\nvar VERBOSE=true\n\n//Funciones para la puntuacion del juego\nfunction sacarFila(arr, idx){\n\tconst ret = []\n\tfor(const fil in arr){\n\t\tret.push(arr[fil][idx])\n\t}\n\treturn ret\n}\n\nfunction lensubconjunto(arr, ficha){\n\tvar subconjunto = fs.clonar(ficha)\n\tconsole.log(subconjunto)\n\tconsole.log(arr)\n\tvar subconjuntolen = 0 \n\tfor(var i = 0; i < arr.length; i++){\n\t\tvar fichaComp = fichas[arr[i]]\n\t\tif(fichaComp){\n\t\t\tif(subconjunto.includes(fichaComp[\"color\"])){\n\t\t\t\tsubconjuntolen += 1\n\t\t\t\tif(!subconjunto.includes(fichaComp[\"patron\"])){\n\t\t\t\t\tsubconjunto = [fichaComp[\"color\"]]\n\t\t\t\t}\n\t\t\t} else if(subconjunto.includes(fichaComp[\"patron\"])) {\n\t\t\t\tsubconjuntolen += 1\n\t\t\t\tsubconjunto = [fichaComp[\"patron\"]]\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t} else {\n\t\t\treturn [subconjuntolen, subconjunto]\n\t\t}\n\t}\n\treturn [subconjuntolen, subconjunto]\n}\n\nfunction subconjuntosVerticales(tablero, posiciones){\n\tvar subconjuntos = [[], [], [], [], []]\n\tfor(const idx in posiciones){\n\t\tvar pos = posiciones[idx]\n\t\tvar tab = tablero[pos[0]].slice(0, pos[1])\n\t\tconst ficha = fichas[tablero[pos[0]][pos[1]]]\n\t\tconsole.log(tablero)\n\t\tconsole.log(pos)\n\t\tconsole.log(ficha)\n\t\ttab.reverse()\n\t\tconst subconjunto = lensubconjunto(tab, [ficha[\"color\"], ficha[\"patron\"]])[0]\n\t\tif(subconjunto){\n\t\t\tsubconjuntos[pos[0]] = [pos[1] - subconjunto, pos[1]]\n\t\t}\n\t}\n\treturn subconjuntos\n}\n\n\n//TODO: CAREFULLY EXAMINE + REFACTOR THIS SPAGHETTI CODE\n\nfunction subconjuntosHorizontales(tablero, posiciones){\n\tvar subconjuntos = [[], [], [], [], []]\n\tfor(const idx in posiciones){\n\t\tvar pos = posiciones[idx] \n\t\tconsole.log(`Buscando subconjuntos para ficha ${pos}`)\n\t\tconst fila = sacarFila(tablero, pos[1])\n\t\tconsole.log(fila)\n\t\tvar visitado = false\n\t\tfor(const sc in subconjuntos[pos[1]]){\n\t\t\tif(subconjuntos[pos[1]][sc][0] <= pos[0]\n\t\t\t\t&& subconjuntos[pos[1]][sc][1] >= pos[0]){\n\t\t\t\tvisitado = true\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\tif(!visitado){\n\t\t\tconsole.log(`139: ${subconjuntos[idx]}`)\n\t\t\tconst ficha = fichas[tablero[pos[0]][pos[1]]]\n\t\t\tconsole.log(\"FILA: \")\n\t\t\tconsole.log(fila)\n\t\t\tconst tableroIzq = fila.slice(0, pos[0])\n\t\t\tconsole.log(\"TABLERO IZQ: \")\n\t\t\tconsole.log(tableroIzq)\n\t\t\ttableroIzq.reverse()\n\t\t\tvar lenSubconjIzq = lensubconjunto(tableroIzq, [ficha[\"color\"], ficha[\"patron\"]])\n\t\t\tconsole.log(lenSubconjIzq)\n\t\t\tif(lenSubconjIzq[0]){\n\t\t\t\tconsole.log(`183: ${subconjuntos}`)\n\t\t\t\tconsole.log(`184: ${subconjuntos[pos[1]]}`)\n\t\t\t\tsubconjuntos[pos[1]].push([pos[0] - lenSubconjIzq[0], pos[0]])\n\t\t\t\tconsole.log(`186: ${subconjuntos[pos[1]]}`)\n\t\t\t}\n\t\t\t// Lado derecho\n\t\t\tvar derecho = []\n\t\t\tconst tableroDer = fila.slice(pos[0]+1, fila.length)\n\t\t\tif(pos[0] != tablero[0].length - 1){\n\t\t\t\tconsole.log(`FICHA ASJACENTE: ${pos[0]+1}`)\n\t\t\t\tvar adjacent = fichas[tablero[pos[0]+1][pos[1]]]\n\t\t\t\tif (adjacent){\n\t\t\t\t\tconsole.log(adjacent)\n\t\t\t\t\tif(lenSubconjIzq[1].includes(adjacent[\"color\"]) || lenSubconjIzq[1].includes(adjacent[\"patron\"])) {\n\t\t\t\t\t\tconsole.log(\"Trying to add adjacent ficha ... \")\n\t\t\t\t\t\tderecho = lenSubconjIzq[1]\n\t\t\t\t\t\tconsole.log(\"Se encontro el siguiento sc:\")\n\t\t\t\t\t\tvar subconjuntoDer = lensubconjunto(tableroDer, derecho)[0]\n\t\t\t\t\t\tconsole.log(subconjuntoDer)\n\t\t\t\t\t\tif(subconjuntoDer){\n\t\t\t\t\t\t\tif(subconjuntos[pos[1]].length > 0 ){\n\t\t\t\t\t\t\t\tsubconjuntos[pos[1]][subconjuntos[pos[1]].length - 1][1] += subconjuntoDer\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsubconjuntos[pos[1]].push([pos[0], pos[0] + subconjuntoDer])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar derecho = [ficha[\"color\"], ficha[\"patron\"]]\n\t\t\t\t\t\tif(derecho.includes(adjacent[\"color\"]) || derecho.includes(adjacent[\"patron\"])) {\n\t\t\t\t\t\t\tvar subconjuntoDer = lensubconjunto(tableroDer, derecho)[0]\n\t\t\t\t\t\t\tif(subconjuntoDer){\n\t\t\t\t\t\t\t\tsubconjuntos[pos[1]].push([pos[0], pos[0] + lensubconjunto(tableroDer, derecho)[0]])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(`164: ${subconjuntos[pos[1]]}`)\n\t\t}\n\t\tconsole.log(`166: ${subconjuntos[pos[1]]}`)\n\t}\n\treturn subconjuntos\n}\n\n\n\n//Funcion para bajar filas al finar de una ronda\nfunction bajarFichas(tablero, posiciones){\n\tvar newTablero = fs.clonar(tablero)\n\tfor(const pos in posiciones){\n\t\tfor(const col in newTablero[pos]){\n\t\t\tif(newTablero[pos][col] === null){\n\t\t\t\tnewTablero[pos][col] = posiciones[pos]\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\treturn newTablero\n}\n\n\n\n\nfunction calcularPuntos(jugador, posiciones, basura){\n\tconsole.log(posiciones)\n\tvar subconjuntos = [[], []]\n\tvar puntuacionV = 0\n\tvar puntuacionH = 0\n\tsubconjuntos[0] = subconjuntosVerticales(jugador[\"tablero\"], posiciones)\n\tconsole.log(subconjuntos)\n\tfor(var sc in subconjuntos[0]){\n\t\tif(subconjuntos[0][sc].length){\n\t\t\tpuntuacionV += 1 + subconjuntos[0][sc][1] - subconjuntos[0][sc][0]\n\t\t}\n\t}\n\tsubconjuntos[1] = subconjuntosHorizontales(jugador[\"tablero\"], posiciones)\n\tconsole.log(\"Sacando subconjuntos horizontales ....\")\n\tconsole.log(subconjuntos)\n\tfor(var sc in subconjuntos[1]){\n\t\tfor(var ssc in subconjuntos[1][sc]){\n\t\t\tif(subconjuntos[1][sc][ssc].length){\n\t\t\t\tpuntuacionH += 1 + subconjuntos[1][sc][ssc][1] - subconjuntos[1][sc][ssc][0]\n\t\t\t}\n\t\t}\n\t}\n\tconsole.log(`Puntuacion vertical: ${puntuacionV}`)\n\tconsole.log(`Puntuacion horizontal: ${puntuacionH}`)\n\tconsole.log(`Cantidad en basura: ${basura}`)\n\tconsole.log(puntuacionH+puntuacionV-basura)\n\n\treturn [puntuacionH+puntuacionV-basura, subconjuntos]\n}\n\n\n\n\nfunction bajarFichasYSacarPuntuacion(salaActual, state, socket = \"\"){\n\tif(!salaActual[\"primerTurno\"] || salaActual[\"local\"]){ //como primerTurno solo es para prevenir requests multiples, siempre es falso en salas locales\n  \t\t\tsalaActual[\"primerTurno\"] = false;\n\n  \t\t\t//Manejo de cada usuario en la sala \n\t  \t\tfor(const u in salaActual[\"usuarios\"]){\n\t  \t\t\tvar usuarioActual = salaActual[\"usuarios\"][u]\n\t  \t\t\tif(usuarioActual[\"usuario\"] == socket.id){\n\t\t\t  \t\tusuarioActual[\"canasta\"] = []\n\t\t\t  \t\tusuarioActual[\"columnas\"] = state[\"cols\"]\n\t\t\t  \t\tusuarioActual[\"basura\"] = state[\"basura\"]\n\t  \t\t\t}\n\n\t  \t\t\t// Bajar fichas y sacar puntuacion\n\t  \t\t\tvar fichasBajadas = []\n\t  \t\t\tvar nuevoTablero = fs.clonar(usuarioActual[\"tablero\"])\n\t  \t\t\tfor(const c in usuarioActual[\"columnas\"]){\n\t  \t\t\t\tvar colActual = usuarioActual[\"columnas\"][c]\n\t  \t\t\t\tif(colActual[colActual.length - 1] != null){ //si esta llena la columna\n\t  \t\t\t\t\tconsole.log(\"BAJANDO UNA FICHA\")\n\t  \t\t\t\t\tusuarioActual[\"columnas\"][c] = Array(colActual.length).fill(null) // Se borra la columna \n\t  \t\t\t\t\tif(colActual.length > 1){ //Se regresan las fichas de mas\n\t\t\t  \t\t\t\tsalaActual[\"fichasCentro\"] = salaActual[\"fichasCentro\"].concat(fs.indexesToFichas(colActual.slice(1), salaActual[\"fichas\"]))\n\t\t\t  \t\t\t}\n\t\t  \t\t\t\tfor(const f in nuevoTablero[c]){ // Se bajan las fichas \n\t\t  \t\t\t\t\tif(nuevoTablero[c][f] === null){\n\t\t\t\t\t\t\t\t\tnuevoTablero[c][f] = colActual[0]\n\t\t\t\t\t\t\t\t\tfichasBajadas.push([parseInt(c), parseInt(f)])\n\t\t\t\t\t\t\t\t\tif(f == nuevoTablero[c].length-1){\n\t\t  \t\t\t\t\t\t\tsalaActual[\"activo\"] = false\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\t\t}\n\t\t  \t\t\t\t}\n\t\t  \t\t\t} \n\t  \t\t\t}\n\t  \t\t\tif(VERBOSE){\n\t  \t\t\t\tconsole.log(nuevoTablero)\n\t  \t\t\t}\n\t  \t\t\tusuarioActual[\"tablero\"] = nuevoTablero\n\t  \t\t\tconst puntos = calcularPuntos(usuarioActual, fichasBajadas, usuarioActual[\"basura\"].length)\n\t  \t\t\tusuarioActual[\"puntuacion\"][0] += puntos[0]\n\t  \t\t\tusuarioActual[\"puntuacion\"][1] = puntos[1]\n\t  \t\t\tsalaActual[\"fichasCentro\"] = salaActual[\"fichasCentro\"].concat(fs.indexesToFichas(usuarioActual[\"basura\"], salaActual[\"fichas\"]))\n\t  \t\t\tusuarioActual[\"basura\"] = []\n\t  \t\t\tif(VERBOSE){\n\t  \t\t\t\tconsole.log(`USUARIO ${usuarioActual[\"usuario\"]} TRAS EL FINAL DE LA RONDA: ${usuarioActual}`)\n\t  \t\t\t}\n\t  \t\t}\n\n\t  \t\tsalaActual[\"ronda\"] += 1\n\t  \t\tvar primerJugador = salaActual[\"ronda\"]%salaActual[\"usuarios\"].length\n\t  \t\tsalaActual[\"turno\"] = salaActual[\"usuarios\"][primerJugador][\"usuario\"]\n\n\t  \t\tfs.distribuirFichas(salaActual, primerJugador)\n\n\t  \t\treturn salaActual\n\t  \t} else {\n\t  \t\tconsole.log(`ERROR: Ya empezo la siguiente ronda en la sala ${salaActual[\"sala\"]}`)\n\t  \t}\n}\n\nmodule.exports = {calcularPuntos, bajarFichas, bajarFichasYSacarPuntuacion};"],"mappings":"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"},"metadata":{},"sourceType":"module"}