{"ast":null,"code":"var _jsxFileName = \"/home/csgarciamartinez/Telar/telar-client/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { DndProvider, useDrag, useDrop } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend'; //TODO: DRAG AND DROP\n//todo (less urgent) lots of refactoring, see if I can eliminate a lot of the\n// \"mirroring\" going on in componentdidupdate, why dont i just use props \n// from the source? \n//TODO WHEN REFACTORING: Instead of having a text field that users can input anything into,\n// have the game generate a random hex code you can send to your friends, and limit\n// number of characters they can enter into the enter nbox \n//TODO (extreeeeemely low priority): spectator mode\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemTypes = {\n  FICHA: 'Ficha'\n};\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    style: props.style,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nfunction ColSquare(props) {\n  _s();\n\n  const [{\n    isOver\n  }, drop] = useDrop(() => ({\n    accept: ItemTypes.FICHA,\n    drop: () => console.log(\"drop\"),\n    collect: monitor => ({\n      isOver: !!monitor.isOver()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drop,\n    style: {\n      position: 'relative',\n      width: '100%',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square col-square\",\n      onClick: props.onclick,\n      children: props.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), isOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%',\n        zIndex: 1,\n        opacity: 0.5,\n        backgroundColor: 'yellow'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ColSquare, \"J1zlkivqRCGcJFAnPMhlnYWlWR0=\", false, function () {\n  return [useDrop];\n});\n\n_c2 = ColSquare;\n; //Boards for each individual player \n\nclass Tablero extends React.Component {\n  constructor(props) {\n    super(props);\n  } //TODO: DONT RUN FOR EVERY FICHA, ONLY THE ONES THAT HAVE BEEN DROPPED!\n\n\n  highlight(i) {\n    const col = Math.floor(i / 5);\n    const fila = i % 5;\n    var style = \"\";\n\n    if (this.props.puntuacion[0][col].length) {\n      if (this.props.puntuacion[0][col][0] <= fila && this.props.puntuacion[0][col][1] >= fila) {\n        style = \"red\";\n      }\n    }\n\n    for (const sc in this.props.puntuacion[1][fila]) {\n      if (this.props.puntuacion[1][fila][sc].length) {\n        if (this.props.puntuacion[1][fila][sc][0] <= col && this.props.puntuacion[1][fila][sc][1] >= col) {\n          if (style == \"red\") {\n            style = \"purple\";\n          } else {\n            style = \"blue\";\n          }\n        }\n      }\n    }\n\n    return {\n      backgroundColor: style\n    };\n  }\n\n  renderSquare(i) {\n    if (this.props.tableroFichas) {\n      if (this.props.puntuacion.length) {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: this.props.tableroFichas[i],\n          style: this.highlight(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Square, {\n          value: this.props.tableroFichas[i],\n          style: null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: null,\n        style: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  renderColSquare(col, fil) {\n    return /*#__PURE__*/_jsxDEV(ColSquare, {\n      value: this.props.cols[col][fil],\n      onclick: () => this.fichaEnColumna(col, this.props.ficha),\n      ondrop: console.log(\"drop\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n\n  fichaEnColumna(col, ficha) {\n    this.props.ponerFicha(col, ficha);\n  }\n\n  render() {\n    //todo: there's gotta be a better way than this \n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"empty-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"empty-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), this.renderColSquare(2, 2), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"empty-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"empty-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"empty-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), this.renderColSquare(1, 1), this.renderColSquare(2, 1), this.renderColSquare(3, 1), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"empty-square\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderColSquare(0, 0), this.renderColSquare(1, 0), this.renderColSquare(2, 0), this.renderColSquare(3, 0), this.renderColSquare(4, 0)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(4), this.renderSquare(9), this.renderSquare(14), this.renderSquare(19), this.renderSquare(24)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(8), this.renderSquare(13), this.renderSquare(18), this.renderSquare(23)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(2), this.renderSquare(7), this.renderSquare(12), this.renderSquare(17), this.renderSquare(22)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(1), this.renderSquare(6), this.renderSquare(11), this.renderSquare(16), this.renderSquare(21)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(5), this.renderSquare(10), this.renderSquare(15), this.renderSquare(20)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction Ficha(props) {\n  _s2();\n\n  const [{\n    isDragging\n  }, drag] = useDrag(() => ({\n    type: ItemTypes.FICHA,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: drag,\n    className: \"ficha\",\n    style: ({\n      opacity: isDragging ? 0.5 : 1\n    }, props.style),\n    onClick: props.onclick,\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", props.simbolo, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Ficha, \"IjyI5uV8ET8oZCgEs++uqE2gplk=\", false, function () {\n  return [useDrag];\n});\n\n_c3 = Ficha;\n\nfunction Canasta(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canasta\",\n    children: props.fichas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = Canasta;\n\nfunction Basura(props) {\n  console.log(props.fichas);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"basura\",\n    onClick: () => props.tirarFicha(props.ficha),\n    children: props.fichas\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n} // Will store information on currently selected subset, eventually \n// also player order\n\n\n_c5 = Basura;\n\nclass Player extends React.Component {\n  constructor(props) {\n    console.log(\"Constructing player board ...\");\n    super(props); //Canasta \n\n    const enCanasta = [];\n\n    for (const ficha in this.props.fichas) {\n      enCanasta.push(this.props.fichas[ficha]);\n    } //Columnas \n\n\n    const columnas = Array(5);\n    columnas[0] = Array(1).fill(null);\n    columnas[1] = Array(2).fill(null);\n    columnas[2] = Array(3).fill(null);\n    columnas[3] = Array(2).fill(null);\n    columnas[4] = Array(1).fill(null);\n    this.state = {\n      fichaElegida: null,\n      fichasEnCanasta: enCanasta,\n      tablero: Array(25).fill(null),\n      basura: [],\n      cols: columnas,\n      subset: [] // Si concuerda con cualquier cosa en el subconjunto\n\n    };\n  } //TODO: REALLY WORRIED ABOUT WHAT HAPPENS SI UN JUGADOR ACABA CON LAS FICHAS\n  //EN SU CANASTA EN LA PRIMERA RONDA, PERO AUN HAY FICHAS EN OTRAS CANASTAS!\n  //PROBABLEMENTE SE SOLUCIONE CON UN \"PLAYER TURN\" \n\n\n  hacerJugada() {\n    console.log(this.state.fichasEnCanasta);\n\n    if (this.state.fichasEnCanasta.length) {\n      console.log(\"Haciendo jugada ...\");\n      this.props.socket.current.emit('jugada', this.props.roomname, this.state);\n    } else {\n      for (const u in this.props.room[\"users\"]) {\n        if (this.props.room[\"users\"][u][\"user\"] != this.props.username && this.props.room[\"users\"][u][\"canasta\"].length) {\n          console.log(\"Haciendo jugada ...\");\n          this.props.socket.current.emit('jugada', this.props.roomname, this.state);\n          return;\n        }\n      }\n\n      console.log(\"Se acabo la ronda ... \");\n      this.props.socket.current.emit('ronda', this.props.roomname, this.state);\n    }\n  } //TODO: Refactor this, get it out of here\n  //TODO: REALLY WORRIED ABOUT WHAT HAPPENS SI UN JUGADOR ACABA CON LAS FICHAS\n  //EN SU CANASTA EN LA PRIMERA RONDA, PERO AUN HAY FICHAS EN OTRAS CANASTAS!\n  //PROBABLEMENTE SE SOLUCIONE CON UN \"PLAYER TURN\" \n  //TODO: RERENDERING TABLERO EVEN WHEN I DON'T HAVE TO, FUCKING STUPID\n  //TODO: make this respond to GAME TURN not to FICHAS CHANGE \n\n\n  componentDidUpdate(prevProps) {\n    if (this.props.fichas !== prevProps.fichas) {\n      console.log(`Cambio en fichas! `);\n      const enCanasta = [];\n\n      for (const ficha in this.props.fichas) {\n        enCanasta.push(this.props.fichas[ficha]);\n      }\n\n      if (this.props.columnas) {\n        this.setState({\n          fichasEnCanasta: enCanasta,\n          subset: [],\n          cols: this.clonar(this.props.columnas)\n        });\n      } else {\n        const columnas = Array(5);\n        columnas[0] = Array(1).fill(null);\n        columnas[1] = Array(2).fill(null);\n        columnas[2] = Array(3).fill(null);\n        columnas[3] = Array(2).fill(null);\n        columnas[4] = Array(1).fill(null);\n        this.setState({\n          fichasEnCanasta: enCanasta,\n          subset: [],\n          cols: columnas\n        });\n      }\n\n      if (this.props.tablero) {\n        this.setState({\n          tablero: this.props.tablero\n        });\n      }\n\n      if (this.props.basura) {\n        this.setState({\n          basura: this.props.basura\n        });\n      }\n    }\n  }\n\n  acuerda(ficha) {\n    let subset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.subset;\n    // console.log(`Comparando ficha ${ficha[\"patron\"]} ${ficha[\"color\"]}`)\n    // console.log(`Comparando con subconjunto ${subset}`)\n    return subset.includes(ficha[\"patron\"]) || subset.includes(ficha[\"color\"]);\n  } //Para clonar las columnas\n\n\n  clonar(arr) {\n    return arr.map(x => Array.isArray(x) ? this.clonar(x) : x);\n  } //Sacar el subconjunto de una columna\n\n\n  getSubset(col) {\n    var fichasKey = this.props.fichasEnCuarto;\n\n    if (col[0]) {\n      var subset = [fichasKey[col[0]][\"color\"], fichasKey[col[0]][\"patron\"]];\n\n      for (const f in col) {\n        if (col[f]) {\n          if (subset.includes(fichasKey[col[f]][\"color\"])) {\n            if (subset.length > 1 && !subset.includes(fichasKey[col[f]][\"patron\"])) {\n              subset = [fichasKey[col[f]][\"color\"]];\n              console.log(`${subset}`);\n            }\n          } else if (subset.includes(fichasKey[col[f]][\"patron\"])) {\n            subset = [fichasKey[col[f]][\"patron\"]];\n            console.log(`${subset}`);\n          } else {\n            // No deberia occurrir\n            console.error(`Columna ${col} no fue construida bien`);\n            return [];\n          }\n        } else {\n          return subset;\n        }\n      }\n\n      return []; //Esta llena la columna \n    } else {\n      return [];\n    }\n  }\n\n  ponerFicha(col, ficha) {\n    if (ficha) {\n      //Probablemente seria mejor tener un state con el subconjunto actual\n      // de cada columna pero va ser dificil manejarlo por >1 ronda y los subconjuntos \n      //son peque~nos asi que mejor calcularlo cada vez\n      if (!this.state.cols[col][0] || this.acuerda(ficha, this.getSubset(this.state.cols[col]))) {\n        console.log(`Trying to place ${ficha[\"patron\"]}, ${ficha[\"color\"]}`);\n        const len = this.state.cols[col].length;\n        const newCol = this.clonar(this.state.cols);\n        const newCanasta = this.state.fichasEnCanasta.slice();\n        let fil = 0;\n\n        while (fil < len && this.state.cols[col][fil]) {\n          fil++;\n        }\n\n        console.log(`Poniendo en columna ${col}, fila ${fil}`);\n\n        if (fil == len) {\n          // Esta llena la columna\n          console.log(\"Can't place here!\"); //TODO actually show to player\n        } else {\n          const idx = this.props.fichasEnCuarto.findIndex(x => x === ficha);\n          newCol[col][fil] = idx;\n          console.log(`${newCanasta}`);\n          console.log(`${idx}`);\n          newCanasta.splice(this.state.fichasEnCanasta.findIndex(x => x == idx), 1);\n          console.log(`${newCanasta}`);\n        }\n\n        this.setState({\n          fichaElegida: null,\n          cols: newCol,\n          fichasEnCanasta: newCanasta\n        });\n      } else {\n        console.log(\"Ficha no acuerda con columna o columna esta llena\");\n      }\n    } else {\n      console.log(\"No se selecciono una ficha\");\n    }\n  } // TODO: Test a ver si se puede tirar una ficha si aun existen jugadas posibles \n  // TODO: Supongamos que tenemos dos subconjuntos, cada uno de tres fichas identicas,\n  // y solo tenemos dos espacios libres. Creo que entonces, el jugador se quedaria\n  // atascado, a pesar de no tener jugadas posibles! \n\n\n  tirarFicha(ficha) {\n    if (ficha) {\n      //Comparar con state.cols, no props.cols \n      for (const f in this.state.fichasEnCanasta) {\n        var fichaActual = this.props.fichasEnCuarto[this.state.fichasEnCanasta[f]];\n        console.log(fichaActual);\n\n        for (const col in this.state.cols) {\n          if (this.state.cols[col][0] == null || this.acuerda(fichaActual, this.getSubset(this.state.cols[col]))) {\n            console.log(`Aun se puede colocar ${fichaActual[\"color\"]} ${fichaActual[\"patron\"]} en columna ${col}`);\n            return;\n          }\n        }\n      }\n\n      var newBasura = this.clonar(this.state.basura);\n      const idx = this.props.fichasEnCuarto.findIndex(x => x === ficha);\n      newBasura.push(idx);\n      var newCanasta = this.state.fichasEnCanasta.slice();\n      newCanasta.splice(this.state.fichasEnCanasta.findIndex(x => x == idx), 1);\n      this.setState({\n        basura: newBasura,\n        fichasEnCanasta: newCanasta\n      });\n      console.log(this.state.basura);\n    } else {\n      console.log(\"No se selecciono una ficha\");\n    }\n  } // TODO (not urgent) solo bajar las que no acuerden \n  // con el subset\n  // TODO: Que ocurre si en otro turno, el jugador logro poner algo en la \n  // basura, y luego le pica a este boton? Siquiera es posible?\n\n\n  borrarColumnas() {\n    const enCanasta = [];\n    const myFichas = [];\n\n    for (const ficha in this.props.fichas) {\n      enCanasta.push(this.props.fichas[ficha]);\n    } //Columnas \n\n\n    const columnas = this.clonar(this.state.cols);\n\n    for (const col in this.state.cols) {\n      for (const f in this.state.cols[col]) {\n        if (this.props.fichas.includes(this.state.cols[col][f])) {\n          //Solo borrar las fichas que se bajaron en este turno\n          columnas[col][f] = null;\n        }\n      }\n    }\n\n    const newBasura = [];\n\n    for (const f in this.state.basura) {\n      if (!this.props.fichas.includes(this.state.basura[f])) {\n        //Solo borrar las fichas que se tiraron en este turno\n        newBasura.push(this.state.basura[f]);\n      }\n    }\n\n    this.setState({\n      cols: columnas,\n      basura: newBasura,\n      fichasEnCanasta: enCanasta\n    });\n  } // Se~nalar el subconjunto segun la ficha seleccionada \n\n\n  elegirSubconjunto(ficha) {\n    this.setState({\n      fichaElegida: ficha\n    });\n    var subsetlen = this.state.subset.length; // Si no se ha eligido una ficha o si la ficha no acuerda\n\n    if (subsetlen == 0 || !this.acuerda(ficha)) {\n      this.setState({\n        subset: [ficha[\"color\"], ficha[\"patron\"]]\n      });\n\n      if (!this.acuerda(ficha)) {\n        //Hate calculating this twice but whatever\n        this.borrarColumnas();\n      }\n    } else {\n      if (subsetlen == 2) {\n        // Solo se ha elegido una ficha\n        if (this.state.subset.includes(ficha[\"patron\"])) {\n          if (!this.state.subset.includes(ficha[\"color\"])) {\n            //Si NO son identicas\n            this.setState({\n              subset: [ficha[\"patron\"]]\n            });\n          }\n        } else {\n          //Como concuerdan, no se tiene que checar si tienen el mismo color\n          this.setState({\n            subset: [ficha[\"color\"]]\n          });\n        }\n      } else if (subsetlen == 1) {\n        // Ya se han elegido >1 fichas no identicas, y la nueva elegida concuerda\n        return; //no hay nada mas que hacer\n      } else {\n        console.log(`ERROR App.js 184 - The maximum length of subset is 2. Current subset: ${this.state.subset}`);\n      }\n    }\n  }\n\n  renderFicha(ficha) {\n    let op = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (ficha) {\n      let color = ficha[\"color\"];\n      let style = {};\n\n      if (op) {\n        if (this.state.fichaElegida == ficha) {\n          style = {\n            backgroundColor: color,\n            border: '1px solid black'\n          };\n        } else {\n          style = {\n            backgroundColor: color\n          };\n        }\n      } else {\n        style = {\n          backgroundColor: color,\n          opacity: \"50%\"\n        };\n      }\n\n      let simbolo = ficha[\"patron\"];\n      return /*#__PURE__*/_jsxDEV(Ficha, {\n        style: style,\n        simbolo: simbolo,\n        onclick: () => this.elegirSubconjunto(ficha)\n      }, ficha[\"id\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 14\n      }, this);\n    } else {\n      return null;\n    }\n  }\n\n  renderGoButton() {\n    let onClick = () => alert(\"No es tu turno\");\n\n    let style = {\n      opacity: \"50%\"\n    };\n\n    if (this.props.socket) {\n      if (this.props.socket.current.id == this.props.turno) {\n        var quedanFichas = [];\n\n        for (const s in this.state.subset) {\n          var subs = [this.state.subset[s]];\n          quedanFichas.push(true);\n\n          for (const f in this.state.fichasEnCanasta) {\n            if (this.acuerda(this.props.fichasEnCuarto[this.state.fichasEnCanasta[f]], subs)) {\n              console.log(`Aun quedan fichas en subconjunto ${subs}`);\n              quedanFichas[s] = false;\n              break;\n            }\n          }\n        } // }\n\n\n        onClick = () => alert(\"Favor de seleccionar un subconjunto completo\");\n\n        if (quedanFichas.length > 0) {\n          if (quedanFichas.reduce((x, y) => x || y)) {\n            style = {};\n\n            onClick = () => this.hacerJugada();\n          }\n        } else {\n          onClick = () => this.hacerJugada();\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: style,\n      onClick: onClick,\n      children: \"Hacer jugada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderUndoButton() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => this.borrarColumnas(),\n      children: \" Deshacer \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderCanasta() {\n    const fich = [];\n\n    for (const ficha in this.state.fichasEnCanasta) {\n      var fichaActual = this.state.fichasEnCanasta[ficha];\n\n      if (this.state.subset.length == 0 || this.acuerda(this.props.fichasEnCuarto[fichaActual])) {\n        fich.push(this.renderFicha(this.props.fichasEnCuarto[fichaActual]));\n      } else {\n        fich.push(this.renderFicha(this.props.fichasEnCuarto[fichaActual], false));\n      }\n    }\n\n    if (this.props.fichas) {\n      ////Si ya empezo el juego\n      if (this.props.socket.current.id == this.props.username) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Canasta, {\n            fichas: fich\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this), this.renderGoButton(), this.renderUndoButton()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 16\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(Canasta, {\n      fichas: fich\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 12\n    }, this);\n  }\n\n  renderTablero() {\n    var columnas;\n\n    columnas = arr => arr.map(x => Array.isArray(x) ? columnas(x) : this.renderFicha(this.props.fichasEnCuarto[x]));\n\n    var renderBasura = arr => arr.map(x => this.renderFicha(this.props.fichasEnCuarto[x]));\n\n    if (this.props.fichasEnCuarto) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"inline-flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tablero, {\n          style: {\n            display: \"flex\",\n            float: \"left\",\n            paddingRight: \"20px\"\n          },\n          ficha: this.state.fichaElegida,\n          puntuacion: this.props.puntuacion[1],\n          cols: columnas(this.state.cols),\n          ponerFicha: (c, f) => this.ponerFicha(c, f),\n          tableroFichas: columnas(this.state.tablero)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(Basura, {\n          fichas: renderBasura(this.state.basura),\n          ficha: this.state.fichaElegida,\n          tirarFicha: f => this.tirarFicha(f)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Tablero, {\n        ficha: this.state.fichaElegida,\n        cols: this.state.cols,\n        tableroFichas: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DndProvider, {\n      backend: HTML5Backend,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"JUGADOR: \", this.props.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 9\n        }, this), this.renderTablero(), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.subset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"PUNTUACION: \", this.props.puntuacion[0]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 9\n        }, this), this.renderCanasta()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 7\n    }, this);\n  }\n\n} //Called from GameRoom to start the game. Probably not in the right place\n\n\nfunction startGame(skt, roomname) {\n  console.log(`Sent request to start game`);\n  skt.current.emit('start-game', roomname);\n}\n\n;\n\nfunction doTests(skt, roomname) {\n  console.log(`Haciendo pruebas ...`);\n  skt.current.emit('jugada-test');\n} //Gameroom. Props inclused room and socket info\n\n\nfunction GameRoom(props) {\n  //TODO: You can still play even if \"espera\" is on. Will fix during the refactor, when\n  // I just pass in props.room[users][usr] instead of mirroring \n  var boards = [];\n  const client = props.socket;\n  const roomname = props.room[\"roomname\"];\n  const fichas = props.room[\"fichas\"];\n  var espera = \"\";\n  console.log(`Game room has updated, client: ${client.current.id}`);\n  console.log(`En el turno del jugador ${props.room[\"turno\"]}`);\n\n  if (props.room[\"activo\"]) {\n    var idx = 0;\n\n    for (const usr in props.room[\"users\"]) {\n      console.log(`COLUMNAS: ${props.room[\"users\"][usr][\"columnas\"]}`);\n      console.log(`CANASTA: ${props.room[\"users\"][usr][\"canasta\"]}`);\n      var columnas = \"0\";\n\n      if (props.room[\"users\"][usr][\"canasta\"]) {\n        var columnas = props.room[\"users\"][usr][\"canasta\"].toString();\n      } //TODO: Why do i not just pass in props.room[users][usr] instead of pulling basically everything \n      //out of it here?\n\n\n      boards.push( /*#__PURE__*/_jsxDEV(Player, {\n        fichas: props.room[\"users\"][usr][\"canasta\"],\n        columnas: props.room[\"users\"][usr][\"columnas\"],\n        socket: client,\n        roomname: roomname,\n        username: props.room[\"users\"][usr][\"user\"],\n        puntuacion: props.room[\"users\"][usr][\"puntuacion\"],\n        fichasEnCuarto: props.room[\"fichas\"],\n        tablero: props.room[\"users\"][usr][\"tablero\"].flat(),\n        turno: props.room[\"turno\"],\n        room: props.room,\n        ronda: props.room[\"ronda\"],\n        basura: props.room[\"users\"][usr][\"basura\"]\n      }, props.room[\"users\"][usr][\"user\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 19\n      }, this));\n    }\n  } else {\n    for (const usr in props.room[\"users\"]) {\n      boards.push( /*#__PURE__*/_jsxDEV(Player, {\n        puntuacion: props.room[\"users\"][usr][\"puntuacion\"]\n      }, usr, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 19\n      }, this));\n    }\n  }\n\n  console.log(props.room[\"espera\"]);\n\n  if (props.room[\"espera\"]) {\n    console.log(\"626 EN ESPERA .... \");\n    espera = \"espera\";\n  } //TODO: I think you can still play with the \"espera\"??? lol\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: espera,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" PLEASE WAIT FOR RECONNECT \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this), fichas.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"inline-flex\"\n      },\n      children: boards\n    }, \"boards1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 692,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"inline-flex\"\n      },\n      children: [boards, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => startGame(client, roomname),\n        children: \"Start game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => doTests(client, roomname),\n        children: \"Pruebas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 9\n      }, this)]\n    }, \"boards2\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 688,\n    columnNumber: 5\n  }, this);\n} //Connect to server info \n//TODO: After clicking button, set button to NOT CLICK\n\n\n_c6 = GameRoom;\n\nfunction handleClick(skt) {\n  var form = document.getElementById('room-creation-form');\n  var input = document.getElementById('new-room-name');\n  form.addEventListener('submit', function (e) {\n    e.preventDefault();\n\n    if (input.value) {\n      skt.current.emit('new-room', input.value);\n    }\n  });\n  console.log(`Trying to create or join room: ${input.value}`);\n}\n\n;\n\nfunction App() {\n  _s3();\n\n  const socket = io('http://localhost:5000');\n  const [gameRoom, setGameRoom] = useState('');\n  const [roomFull, setRoomFull] = useState('');\n  const client = useRef();\n  useEffect(() => {\n    socket.on('connect', () => console.log(`Client connected: ${socket.id}`));\n    socket.on('disconnect', reason => console.log(`Client disconnected: ${reason}`));\n    socket.on('connect_error', reason => console.log(`Client connect_error: ${reason}`));\n    socket.on('room-created', msg => setGameRoom(msg));\n    socket.on('room-full', () => setRoomFull(true));\n    socket.on('new-user', msg => setGameRoom(msg));\n    socket.on('game-started', msg => {\n      console.log(\"Game has started\");\n      setGameRoom(msg);\n    });\n    socket.on('hacer-jugada', msg => {\n      console.log(\"Se hizo una jugada\");\n      setGameRoom(msg);\n    });\n    socket.on('siguiente-ronda', msg => {\n      console.log(\"Bajando las fichas y sacando puntuacion ...\");\n      setGameRoom(msg);\n    });\n    socket.on('final', msg => {\n      console.log(\"SE ACABO EL JUEGO\");\n      setGameRoom(msg);\n    });\n    socket.on('en espera', msg => {\n      console.log(\"Esperando la reconneccion del jugador ... \");\n      setGameRoom(msg);\n    });\n    socket.on('desconeccion de jugador', msg => setGameRoom(msg));\n    client.current = socket;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: gameRoom ? /*#__PURE__*/_jsxDEV(\"div\", {\n      color: \"blue\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" In room \", gameRoom.roomname, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(GameRoom, {\n        room: gameRoom,\n        socket: client\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Create a new game room \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"room-creation-form\",\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"new-room-name\",\n          autocomplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleClick(client),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 15\n      }, this), roomFull ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Room full or already in game, try another \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 80\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 778,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(App, \"9NRI5No4wBbafymtCga6GwsWXA8=\");\n\n_c7 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"ColSquare\");\n$RefreshReg$(_c3, \"Ficha\");\n$RefreshReg$(_c4, \"Canasta\");\n$RefreshReg$(_c5, \"Basura\");\n$RefreshReg$(_c6, \"GameRoom\");\n$RefreshReg$(_c7, \"App\");","map":{"version":3,"names":["useEffect","useState","useRef","io","React","ReactDOM","DndProvider","useDrag","useDrop","HTML5Backend","ItemTypes","FICHA","Square","props","style","value","ColSquare","isOver","drop","accept","console","log","collect","monitor","position","width","height","onclick","top","left","zIndex","opacity","backgroundColor","Tablero","Component","constructor","highlight","i","col","Math","floor","fila","puntuacion","length","sc","renderSquare","tableroFichas","renderColSquare","fil","cols","fichaEnColumna","ficha","ponerFicha","render","Ficha","isDragging","drag","type","simbolo","Canasta","fichas","Basura","tirarFicha","Player","enCanasta","push","columnas","Array","fill","state","fichaElegida","fichasEnCanasta","tablero","basura","subset","hacerJugada","socket","current","emit","roomname","u","room","username","componentDidUpdate","prevProps","setState","clonar","acuerda","includes","arr","map","x","isArray","getSubset","fichasKey","fichasEnCuarto","f","error","len","newCol","newCanasta","slice","idx","findIndex","splice","fichaActual","newBasura","borrarColumnas","myFichas","elegirSubconjunto","subsetlen","renderFicha","op","color","border","renderGoButton","onClick","alert","id","turno","quedanFichas","s","subs","reduce","y","renderUndoButton","renderCanasta","fich","renderTablero","renderBasura","display","float","paddingRight","c","startGame","skt","doTests","GameRoom","boards","client","espera","usr","toString","flat","handleClick","form","document","getElementById","input","addEventListener","e","preventDefault","App","gameRoom","setGameRoom","roomFull","setRoomFull","on","reason","msg"],"sources":["/home/csgarciamartinez/Telar/telar-client/src/App.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport {DndProvider, useDrag, useDrop} from 'react-dnd'\nimport{HTML5Backend} from 'react-dnd-html5-backend'\n\n//TODO: DRAG AND DROP\n\n//todo (less urgent) lots of refactoring, see if I can eliminate a lot of the\n// \"mirroring\" going on in componentdidupdate, why dont i just use props \n// from the source? \n\n//TODO WHEN REFACTORING: Instead of having a text field that users can input anything into,\n// have the game generate a random hex code you can send to your friends, and limit\n// number of characters they can enter into the enter nbox \n\n//TODO (extreeeeemely low priority): spectator mode\n\nconst ItemTypes = {\n  FICHA: 'Ficha'\n}\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" style = {props.style}>\n      {props.value}\n    </button>\n  );\n}\n\nfunction ColSquare(props) {\n  const[{isOver}, drop] = useDrop(() => ({\n    accept: ItemTypes.FICHA,\n    drop: () => console.log(\"drop\"),\n    collect: monitor => ({\n      isOver:!!monitor.isOver(),\n    }),\n  }))\n  return (\n    <div \n      ref={drop}\n      style={{\n        position: 'relative',\n        width: '100%', \n        height: '100%',\n      }}\n    >\n    <button className=\"square col-square\" onClick = {props.onclick}>\n      {props.value}\n    </button>\n    {isOver && (\n      <div \n        style = {{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          height: '100%',\n          width: '100%',\n          zIndex: 1,\n          opacity: 0.5,\n          backgroundColor: 'yellow',\n        }}\n        />\n      )}\n    </div>\n  )\n};\n\n//Boards for each individual player \nclass Tablero extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  //TODO: DONT RUN FOR EVERY FICHA, ONLY THE ONES THAT HAVE BEEN DROPPED!\n  highlight(i){\n    const col = Math.floor(i/5)\n    const fila = i%5\n    var style = \"\"\n    if(this.props.puntuacion[0][col].length){\n      if((this.props.puntuacion[0][col][0] <= fila) && (this.props.puntuacion[0][col][1] >= fila)){\n        style = \"red\"\n      }\n    }\n    for(const sc in this.props.puntuacion[1][fila]){\n      if(this.props.puntuacion[1][fila][sc].length){\n        if((this.props.puntuacion[1][fila][sc][0] <= col) && (this.props.puntuacion[1][fila][sc][1] >= col)){\n          if(style == \"red\"){\n            style = \"purple\"\n          } else {\n            style = \"blue\"\n          }\n        }\n      }\n    }\n    return {backgroundColor: style}\n  }\n\n  renderSquare(i) {\n    if(this.props.tableroFichas){\n      if(this.props.puntuacion.length){\n        return (\n          <Square\n            value={this.props.tableroFichas[i]}\n            style={this.highlight(i)}\n          />\n        );\n      } else {\n        return (\n          <Square\n            value={this.props.tableroFichas[i]}\n            style={null}\n          />\n        );\n      }\n    } else {\n      return (\n        <Square\n          value={null}\n          style = {null}\n        />\n      );\n    }\n  }\n\n  renderColSquare(col, fil) {\n    return (\n      <ColSquare\n        value={this.props.cols[col][fil]}\n        onclick = {() => this.fichaEnColumna(col, this.props.ficha)}\n        ondrop = {console.log(\"drop\")}\n      />\n    );\n  }\n\n  fichaEnColumna(col, ficha){\n    this.props.ponerFicha(col, ficha)\n  }\n\n  render() {\n    //todo: there's gotta be a better way than this \n    return (\n      <div>\n        <div className=\"board-row\">\n          <button className=\"empty-square\"/ >\n          <button className=\"empty-square\"/ >\n          {this.renderColSquare(2, 2)}\n          <button className=\"empty-square\"/ >\n          <button className=\"empty-square\"/ >\n        </div>\n        <div className=\"board-row\">\n          <button className=\"empty-square\"/ >\n          {this.renderColSquare(1, 1)}\n          {this.renderColSquare(2, 1)}\n          {this.renderColSquare(3, 1)}\n          <button className=\"empty-square\"/ >\n        </div>\n        <div className=\"board-row\">\n          {this.renderColSquare(0, 0)}\n          {this.renderColSquare(1, 0)}\n          {this.renderColSquare(2, 0)}\n          {this.renderColSquare(3, 0)}\n          {this.renderColSquare(4, 0)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(4)}\n          {this.renderSquare(9)}\n          {this.renderSquare(14)}\n          {this.renderSquare(19)}\n          {this.renderSquare(24)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(8)}\n          {this.renderSquare(13)}\n          {this.renderSquare(18)}\n          {this.renderSquare(23)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(2)}\n          {this.renderSquare(7)}\n          {this.renderSquare(12)}\n          {this.renderSquare(17)}\n          {this.renderSquare(22)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(1)}\n          {this.renderSquare(6)}\n          {this.renderSquare(11)}\n          {this.renderSquare(16)}\n          {this.renderSquare(21)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(5)}\n          {this.renderSquare(10)}\n          {this.renderSquare(15)}\n          {this.renderSquare(20)}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction Ficha(props){\n  const[{isDragging}, drag] = useDrag(() => ({\n    type: ItemTypes.FICHA,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  }))\n\n  return(\n    <div\n      ref = {drag} \n      className=\"ficha\"\n      style={{opacity: isDragging? 0.5: 1}, props.style}\n      onClick = {props.onclick}>\n    <p> {props.simbolo} </p>\n    </div>\n  )\n}\n\n\nfunction Canasta(props){\n  return(\n    <div className=\"canasta\"> \n      {props.fichas}\n    </div>\n  )\n}\n\nfunction Basura(props){\n  console.log(props.fichas)\n  return(\n    <div className=\"basura\" onClick = {() => props.tirarFicha(props.ficha)}>\n      {props.fichas}\n    </div>\n  )\n}\n\n\n// Will store information on currently selected subset, eventually \n// also player order\n\nclass Player extends React.Component{\n  constructor(props) {\n    console.log(\"Constructing player board ...\")\n    super(props);\n\n    //Canasta \n    const enCanasta = []\n    for(const ficha in this.props.fichas){\n      enCanasta.push(this.props.fichas[ficha])\n    }\n    //Columnas \n    const columnas = Array(5)\n    columnas[0] = Array(1).fill(null)\n    columnas[1] = Array(2).fill(null)\n    columnas[2] = Array(3).fill(null)\n    columnas[3] = Array(2).fill(null)\n    columnas[4] = Array(1).fill(null)\n\n\n    this.state = {\n      fichaElegida: null,\n      fichasEnCanasta: enCanasta,\n      tablero: Array(25).fill(null),\n      basura: [],\n      cols: columnas,\n      subset: [], // Si concuerda con cualquier cosa en el subconjunto\n    }\n\n  }\n\n  //TODO: REALLY WORRIED ABOUT WHAT HAPPENS SI UN JUGADOR ACABA CON LAS FICHAS\n  //EN SU CANASTA EN LA PRIMERA RONDA, PERO AUN HAY FICHAS EN OTRAS CANASTAS!\n  //PROBABLEMENTE SE SOLUCIONE CON UN \"PLAYER TURN\" \n  hacerJugada(){\n    console.log(this.state.fichasEnCanasta)\n    if(this.state.fichasEnCanasta.length){\n      console.log(\"Haciendo jugada ...\")\n      this.props.socket.current.emit('jugada', this.props.roomname, this.state)\n    } else{\n      for(const u in this.props.room[\"users\"]){\n        if(this.props.room[\"users\"][u][\"user\"] != this.props.username && this.props.room[\"users\"][u][\"canasta\"].length){\n          console.log(\"Haciendo jugada ...\")\n          this.props.socket.current.emit('jugada', this.props.roomname, this.state)\n          return;\n        }\n      }\n      console.log(\"Se acabo la ronda ... \")\n      this.props.socket.current.emit('ronda', this.props.roomname, this.state)\n    }\n  }\n\n  //TODO: Refactor this, get it out of here\n  //TODO: REALLY WORRIED ABOUT WHAT HAPPENS SI UN JUGADOR ACABA CON LAS FICHAS\n  //EN SU CANASTA EN LA PRIMERA RONDA, PERO AUN HAY FICHAS EN OTRAS CANASTAS!\n  //PROBABLEMENTE SE SOLUCIONE CON UN \"PLAYER TURN\" \n  //TODO: RERENDERING TABLERO EVEN WHEN I DON'T HAVE TO, FUCKING STUPID\n\n\n  //TODO: make this respond to GAME TURN not to FICHAS CHANGE \n  componentDidUpdate(prevProps){\n    if(this.props.fichas !== prevProps.fichas){\n      console.log(`Cambio en fichas! `)\n      const enCanasta = []\n      for(const ficha in this.props.fichas){\n        enCanasta.push(this.props.fichas[ficha])\n      }\n      if(this.props.columnas){\n        this.setState({fichasEnCanasta: enCanasta, subset: [], cols: this.clonar(this.props.columnas)})\n      } else {\n        const columnas = Array(5)\n        columnas[0] = Array(1).fill(null)\n        columnas[1] = Array(2).fill(null)\n        columnas[2] = Array(3).fill(null)\n        columnas[3] = Array(2).fill(null)\n        columnas[4] = Array(1).fill(null)\n        this.setState({fichasEnCanasta: enCanasta, subset: [], cols: columnas})\n      }\n      if(this.props.tablero){\n        this.setState({tablero: this.props.tablero})\n      }\n      if(this.props.basura){\n        this.setState({basura: this.props.basura})\n      }\n    }\n  }\n\n  acuerda(ficha, subset = this.state.subset){\n    // console.log(`Comparando ficha ${ficha[\"patron\"]} ${ficha[\"color\"]}`)\n    // console.log(`Comparando con subconjunto ${subset}`)\n    return(subset.includes(ficha[\"patron\"]) || subset.includes(ficha[\"color\"]));\n  }\n\n  //Para clonar las columnas\n  clonar(arr){\n    return arr.map(x => Array.isArray(x) ? this.clonar(x) : x)\n  }\n\n  //Sacar el subconjunto de una columna\n  getSubset(col){\n    var fichasKey = this.props.fichasEnCuarto\n    if(col[0]){\n      var subset = [fichasKey[col[0]][\"color\"], fichasKey[col[0]][\"patron\"]]\n      for(const f in col){\n        if(col[f]){\n          if(subset.includes(fichasKey[col[f]][\"color\"])){\n            if(subset.length > 1 && !subset.includes(fichasKey[col[f]][\"patron\"])){\n              subset = [fichasKey[col[f]][\"color\"]]\n              console.log(`${subset}`)\n            }\n          } else if (subset.includes(fichasKey[col[f]][\"patron\"] )) { \n            subset = [fichasKey[col[f]][\"patron\"]]\n            console.log(`${subset}`)\n          } else { // No deberia occurrir\n            console.error(`Columna ${col} no fue construida bien`)\n            return []\n          }\n        } else {\n          return subset\n        }\n      }\n      return [] //Esta llena la columna \n    } else {\n      return []\n    }\n  }\n\n  ponerFicha(col, ficha){\n    if (ficha){\n      //Probablemente seria mejor tener un state con el subconjunto actual\n      // de cada columna pero va ser dificil manejarlo por >1 ronda y los subconjuntos \n      //son peque~nos asi que mejor calcularlo cada vez\n      if(!this.state.cols[col][0] || this.acuerda(ficha, this.getSubset(this.state.cols[col]))){\n        console.log(`Trying to place ${ficha[\"patron\"]}, ${ficha[\"color\"]}`)  \n        const len = this.state.cols[col].length\n        const newCol = this.clonar(this.state.cols)\n        const newCanasta = this.state.fichasEnCanasta.slice()\n        let fil = 0\n        while(fil < len && this.state.cols[col][fil]){\n          fil++\n        }\n        console.log(`Poniendo en columna ${col}, fila ${fil}`)\n        if(fil == len){ // Esta llena la columna\n          console.log(\"Can't place here!\")\n          //TODO actually show to player\n        } else {\n          const idx = this.props.fichasEnCuarto.findIndex(x => x === ficha)\n          newCol[col][fil] = idx\n          console.log(`${newCanasta}`)\n          console.log(`${idx}`)\n          newCanasta.splice(this.state.fichasEnCanasta.findIndex(x => x == idx), 1)\n          console.log(`${newCanasta}`)\n        }\n        this.setState({\n          fichaElegida: null,\n          cols: newCol,\n          fichasEnCanasta: newCanasta\n        })\n      } else {\n        console.log(\"Ficha no acuerda con columna o columna esta llena\")\n      }\n    } else {\n      console.log(\"No se selecciono una ficha\")\n    }\n  }\n\n\n  // TODO: Test a ver si se puede tirar una ficha si aun existen jugadas posibles \n  // TODO: Supongamos que tenemos dos subconjuntos, cada uno de tres fichas identicas,\n  // y solo tenemos dos espacios libres. Creo que entonces, el jugador se quedaria\n  // atascado, a pesar de no tener jugadas posibles! \n  tirarFicha(ficha){\n    if(ficha){ //Comparar con state.cols, no props.cols \n      for(const f in this.state.fichasEnCanasta){\n        var fichaActual = this.props.fichasEnCuarto[this.state.fichasEnCanasta[f]]\n        console.log(fichaActual)\n        for (const col in this.state.cols){\n          if(this.state.cols[col][0] == null ||\n            this.acuerda(fichaActual, this.getSubset(this.state.cols[col]))) {\n              console.log(`Aun se puede colocar ${fichaActual[\"color\"]} ${fichaActual[\"patron\"]} en columna ${col}`)\n              return \n          }\n        }\n      }\n\n      var newBasura = this.clonar(this.state.basura)\n      const idx = this.props.fichasEnCuarto.findIndex(x => x === ficha)\n      newBasura.push(idx)\n      var newCanasta = this.state.fichasEnCanasta.slice()\n      newCanasta.splice(this.state.fichasEnCanasta.findIndex(x => x == idx), 1)\n\n      this.setState({basura: newBasura, fichasEnCanasta: newCanasta})\n      console.log(this.state.basura)\n    } else {\n      console.log(\"No se selecciono una ficha\")\n    }\n  }\n\n  // TODO (not urgent) solo bajar las que no acuerden \n  // con el subset\n  // TODO: Que ocurre si en otro turno, el jugador logro poner algo en la \n  // basura, y luego le pica a este boton? Siquiera es posible?\n  borrarColumnas(){\n    const enCanasta = []\n    const myFichas = []\n    for(const ficha in this.props.fichas){\n      enCanasta.push(this.props.fichas[ficha])\n    }\n    //Columnas \n    const columnas = this.clonar(this.state.cols)\n    for(const col in this.state.cols){\n      for(const f in this.state.cols[col]){\n        if(this.props.fichas.includes(this.state.cols[col][f])){\n          //Solo borrar las fichas que se bajaron en este turno\n          columnas[col][f] = null   \n        }\n      }\n    }\n\n    const newBasura = []\n    for (const f in this.state.basura){\n      if(!this.props.fichas.includes(this.state.basura[f])){\n        //Solo borrar las fichas que se tiraron en este turno\n        newBasura.push(this.state.basura[f])\n      }\n    }\n\n    this.setState({cols: columnas, basura: newBasura, fichasEnCanasta: enCanasta})\n\n  }\n\n// Se~nalar el subconjunto segun la ficha seleccionada \n  elegirSubconjunto(ficha){\n    this.setState({fichaElegida: ficha})\n    var subsetlen = this.state.subset.length\n    // Si no se ha eligido una ficha o si la ficha no acuerda\n    if(subsetlen == 0 || !this.acuerda(ficha)){\n      this.setState({subset: [ficha[\"color\"], ficha[\"patron\"]]})\n      if(!this.acuerda(ficha)){ //Hate calculating this twice but whatever\n        this.borrarColumnas()\n      } \n    } else {\n      if(subsetlen == 2){ // Solo se ha elegido una ficha\n        if(this.state.subset.includes(ficha[\"patron\"])){\n          if(!this.state.subset.includes(ficha[\"color\"])){ //Si NO son identicas\n              this.setState({subset: [ficha[\"patron\"]]})\n          }\n        } else { //Como concuerdan, no se tiene que checar si tienen el mismo color\n          this.setState({subset: [ficha[\"color\"]]})\n        } \n      } else if (subsetlen == 1){ // Ya se han elegido >1 fichas no identicas, y la nueva elegida concuerda\n        return; //no hay nada mas que hacer\n      } else {\n        console.log(`ERROR App.js 184 - The maximum length of subset is 2. Current subset: ${this.state.subset}`);\n      }\n    }\n  }\n\n  renderFicha(ficha, op = true){\n    if(ficha){\n      let color = ficha[\"color\"]\n      let style = {}\n      if(op){\n        if(this.state.fichaElegida == ficha){\n          style = {backgroundColor: color, border: '1px solid black'}\n        } else {\n          style = {backgroundColor: color}\n        }\n      } else {\n        style = {backgroundColor: color, opacity: \"50%\"}\n      }\n      let simbolo = ficha[\"patron\"]\n      return(<Ficha style = {style} \n                    key = {ficha[\"id\"]}\n                    simbolo = {simbolo}\n                    onclick= {() => this.elegirSubconjunto(ficha)}  />)\n    } else {\n      return null\n    }\n  }\n\n  renderGoButton(){\n    let onClick = () => alert(\"No es tu turno\")\n    let style = {opacity: \"50%\"}\n    if(this.props.socket){\n      if(this.props.socket.current.id == this.props.turno){\n        var quedanFichas = []\n        for(const s in this.state.subset){\n          var subs = [this.state.subset[s]]\n          quedanFichas.push(true)\n          for(const f in this.state.fichasEnCanasta){\n            if(this.acuerda(this.props.fichasEnCuarto[this.state.fichasEnCanasta[f]], subs)) {\n              console.log(`Aun quedan fichas en subconjunto ${subs}`)\n              quedanFichas[s] = false\n              break\n            }\n          }\n        }\n        // }\n        onClick = () => alert(\"Favor de seleccionar un subconjunto completo\")\n        if(quedanFichas.length > 0 ){\n          if(quedanFichas.reduce((x, y) => x || y)){\n            style = {}\n            onClick= ()=>this.hacerJugada()\n          }\n        } else {\n          onClick= ()=>this.hacerJugada()\n        }\n      }\n    }\n    return(<button style = {style} onClick={onClick}>Hacer jugada</button>)\n  }\n\n  renderUndoButton(){\n    return(<button onClick = {() => this.borrarColumnas()}> Deshacer </button>)\n  }\n\n  renderCanasta(){\n    const fich = []\n    for (const ficha in this.state.fichasEnCanasta){\n      var fichaActual = this.state.fichasEnCanasta[ficha]\n      if (this.state.subset.length == 0 || this.acuerda(this.props.fichasEnCuarto[fichaActual])) { \n        fich.push(this.renderFicha(this.props.fichasEnCuarto[fichaActual]))\n      } else {\n        fich.push(this.renderFicha(this.props.fichasEnCuarto[fichaActual], false))\n      }\n    }\n    if(this.props.fichas ){ ////Si ya empezo el juego\n      if(this.props.socket.current.id == this.props.username){\n        return(<div>\n              <Canasta fichas = {fich} />\n              {this.renderGoButton()}\n              {this.renderUndoButton()}\n              </div>)\n      }\n    }\n    return(<Canasta fichas = {fich} />)\n  }\n\n  renderTablero(){\n    var columnas\n    columnas = (arr) => arr.map(x => Array.isArray(x) ? columnas(x) : this.renderFicha(this.props.fichasEnCuarto[x]))\n    var renderBasura = (arr) => arr.map(x => this.renderFicha(this.props.fichasEnCuarto[x]))\n    if(this.props.fichasEnCuarto){\n      return(<div style={{display: \"inline-flex\"}}><Tablero \n                      style = {{display: \"flex\", float:\"left\", paddingRight: \"20px\"}}\n                      ficha = {this.state.fichaElegida} \n                      puntuacion = {this.props.puntuacion[1]}\n                      cols = {columnas(this.state.cols)} ponerFicha = {(c, f) => this.ponerFicha(c, f)} \n                      tableroFichas = {columnas(this.state.tablero)}/>\n\n                      <Basura fichas = {renderBasura(this.state.basura)} \n                        ficha = {this.state.fichaElegida}\n                        tirarFicha = {(f) => this.tirarFicha(f)}/>\n                      </div>)\n    } else {\n      return(<Tablero ficha = {this.state.fichaElegida} cols = {this.state.cols} tableroFichas = {null}/>)\n    }\n  }\n\n  render(){\n    return(\n      <DndProvider backend={HTML5Backend}>\n      <div>\n        <p>JUGADOR: {this.props.username}</p>\n        {this.renderTablero()}\n        <p>{this.state.subset}</p>\n        <p>PUNTUACION: {this.props.puntuacion[0]}</p>\n        {this.renderCanasta()}\n      </div>\n      </DndProvider>\n    )\n  }\n}\n\n\n//Called from GameRoom to start the game. Probably not in the right place\nfunction startGame(skt, roomname){\n  console.log(`Sent request to start game`);\n  skt.current.emit('start-game', roomname);\n};\n\nfunction doTests(skt, roomname){\n  console.log(`Haciendo pruebas ...`)\n  skt.current.emit('jugada-test')\n}\n\n//Gameroom. Props inclused room and socket info\nfunction GameRoom(props){\n  //TODO: You can still play even if \"espera\" is on. Will fix during the refactor, when\n  // I just pass in props.room[users][usr] instead of mirroring \n  var boards = [];\n\n  const client = props.socket;\n  const roomname = props.room[\"roomname\"]\n  const fichas = props.room[\"fichas\"];\n  var espera = \"\"\n  \n  console.log(`Game room has updated, client: ${client.current.id}`)\n  console.log(`En el turno del jugador ${props.room[\"turno\"]}`)\n\n  if(props.room[\"activo\"]){\n    var idx = 0;\n    for(const usr in props.room[\"users\"]){\n      console.log(`COLUMNAS: ${props.room[\"users\"][usr][\"columnas\"]}`)\n      console.log(`CANASTA: ${props.room[\"users\"][usr][\"canasta\"]}`)\n      var columnas = \"0\"\n      if(props.room[\"users\"][usr][\"canasta\"]){\n        var columnas = props.room[\"users\"][usr][\"canasta\"].toString()\n      }\n\n      //TODO: Why do i not just pass in props.room[users][usr] instead of pulling basically everything \n      //out of it here?\n      boards.push(<Player fichas={props.room[\"users\"][usr][\"canasta\"]}\n                          columnas={props.room[\"users\"][usr][\"columnas\"]}\n                          socket={client} \n                          roomname={roomname}\n                          username = {props.room[\"users\"][usr][\"user\"]}\n                          puntuacion={props.room[\"users\"][usr][\"puntuacion\"]}\n                          fichasEnCuarto={props.room[\"fichas\"]}\n                          tablero={props.room[\"users\"][usr][\"tablero\"].flat()}\n                          turno = {props.room[\"turno\"]}\n                          room = {props.room}\n                          ronda = {props.room[\"ronda\"]}\n                          basura = {props.room[\"users\"][usr][\"basura\"]}\n                          key = {props.room[\"users\"][usr][\"user\"]}/>)\n    }\n  } else {\n    for(const usr in props.room[\"users\"]){\n      boards.push(<Player key={usr} puntuacion ={props.room[\"users\"][usr][\"puntuacion\"]}/>);\n    }\n  }\n  console.log(props.room[\"espera\"])\n  if(props.room[\"espera\"]){\n    console.log(\"626 EN ESPERA .... \")\n    espera = \"espera\"\n  }\n\n  //TODO: I think you can still play with the \"espera\"??? lol\n  return(\n    <div> \n      <div id = {espera}> <p> PLEASE WAIT FOR RECONNECT </p> </div>\n      {fichas.length\n        ? \n        <div style={{display:\"inline-flex\"}} key=\"boards1\">{boards}</div>\n        :\n        <div style={{display:\"inline-flex\"}} key=\"boards2\"> \n        {boards}\n        <button onClick={() => startGame(client, roomname)}>\n          Start game\n        </button>\n        <button onClick = {() => doTests(client, roomname)}> \n          Pruebas\n        </button>\n        </div>\n      }\n    </div>\n  )\n}\n\n//Connect to server info \n//TODO: After clicking button, set button to NOT CLICK\nfunction handleClick(skt){\n    var form = document.getElementById('room-creation-form');\n    var input = document.getElementById('new-room-name');\n\n    form.addEventListener('submit', function(e) {\n      e.preventDefault();\n      if (input.value) {\n        skt.current.emit('new-room', input.value);\n      }\n    });\n\n    console.log(`Trying to create or join room: ${input.value}`)\n\n  };\n\n\nfunction App() {\n  const socket = io('http://localhost:5000');\n  const [gameRoom, setGameRoom] = useState('');\n  const [roomFull, setRoomFull] = useState('');\n  const client = useRef();\n\n  useEffect(() => {\n\n    socket.on('connect', () => console.log(`Client connected: ${socket.id}`));\n\n    socket.on('disconnect', (reason) =>\n      console.log(`Client disconnected: ${reason}`)\n    );\n\n    socket.on('connect_error', (reason) =>\n      console.log(`Client connect_error: ${reason}`)\n    );\n\n    socket.on('room-created', (msg) => setGameRoom(msg));\n\n    socket.on('room-full', () => setRoomFull(true));\n\n    socket.on('new-user', (msg) => setGameRoom(msg));\n\n    socket.on('game-started', (msg) => {\n      console.log(\"Game has started\");\n      setGameRoom(msg)});\n\n     socket.on('hacer-jugada', (msg) => {\n      console.log(\"Se hizo una jugada\");\n      setGameRoom(msg)});\n\n     socket.on('siguiente-ronda', (msg) =>{\n      console.log(\"Bajando las fichas y sacando puntuacion ...\")\n      setGameRoom(msg)});\n\n     socket.on('final', (msg) =>{\n      console.log(\"SE ACABO EL JUEGO\")\n      setGameRoom(msg)});\n\n    socket.on('en espera', (msg) => {\n      console.log(\"Esperando la reconneccion del jugador ... \")\n      setGameRoom(msg)});\n\n    socket.on('desconeccion de jugador', (msg) => setGameRoom(msg));\n\n    client.current = socket;\n  }, []);\n\n\n\n  return (\n    <div>\n        {gameRoom\n          ?\n            <div color = \"blue\">\n              <p> In room {gameRoom.roomname} </p>\n              <GameRoom room={gameRoom} socket={client} /> \n            </div>\n          :\n            <div>\n              <p> Create a new game room </p>\n              <form id=\"room-creation-form\" action=\"\">\n                <input id=\"new-room-name\" autocomplete=\"off\" />\n                <button onClick={() => handleClick(client)}>\n                  Send\n                </button>\n              </form>\n              {roomFull ? <p> Room full or already in game, try another </p> : <div/>}\n            </div>\n        }\n      </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}